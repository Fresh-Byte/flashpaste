<?xml version="1.0" encoding="UTF-8"?>
<entry name="LotusScript">
<children count="3">
<entry name="Common">
<children count="6">
<entry name="s.Currentdatabase">
<![CDATA["Dim s As New NotesSession, cdb As NotesDatabase
Set cdb = s.Currentdatabase"]]>
<children count="0">
</children>
</entry>
<entry name="ws.CurrentDocument">
<![CDATA["Dim ws As New NotesUIWorkspace, uidoc As NotesUIDocument, cdoc As NotesDocument
Set uidoc = ws.Currentdocument
Set cdoc = uidoc.Document
"]]>
<children count="0">
</children>
</entry>
<entry name=""Разрыв строки"">
<![CDATA[""" & VARIABLE & """]]>
<children count="0">
</children>
</entry>
<entry name="UI">
<children count="6">
<entry name="Messagebox">
<children count="4">
<entry name=""Уведомление"">
<![CDATA["Msgbox NOTICE_TEXT, 48, ""Application notice"""]]>
<children count="0">
</children>
</entry>
<entry name=""Сообщение"">
<![CDATA["Msgbox MESSAGE_TEXT, 64, ""Application message"""]]>
<children count="0">
</children>
</entry>
<entry name=""Ошибка"">
<![CDATA["Msgbox ERROR_TEXT, 16, ""Application error"""]]>
<children count="0">
</children>
</entry>
<entry name=""С обработкой ответа"">
<![CDATA["%REM
---------------------------------------------------------------------------------------------------------------
BUTTONS
---------------------------------------------------------------------------------------------------------------
MB_OK		0 	OK
MB_OKCANCEL	1	OK and Cancel 
MB_ABORTRETRYIGNORE	2	Abort, Retry, and Ignore 
MB_YESNOCANCEL	3	Yes, No, and Cancel
MB_YESNO		4	Yes and No 
MB_RETRYCANCEL	5	Retry and Cancel 

---------------------------------------------------------------------------------------------------------------
ICON
---------------------------------------------------------------------------------------------------------------
MB_ICONSTOP	16 	Stop sign
MB_ICONQUESTION	32 	Question mark 
MB_ICONEXCLAMATION	48 	Exclamation point
MB_ICONINFORMATION	64 	Information 

---------------------------------------------------------------------------------------------------------------
DEFAULT BUTTON
---------------------------------------------------------------------------------------------------------------
MB_DEFBUTTON1	0 	First button 
MB_DEFBUTTON2	256 	Second button
MB_DEFBUTTON3	512 	Third button

---------------------------------------------------------------------------------------------------------------
MODE
---------------------------------------------------------------------------------------------------------------
MB_APPLMODAL	0	Application modal. Stops the current application until the user responds to the message box.
MB_SYSTEMMODAL	4,096 	System modal. Stops all applications until the user responds to the message box.

---------------------------------------------------------------------------------------------------------------
RETURN VALUE
---------------------------------------------------------------------------------------------------------------
1 		OK
2 		Cancel
3 		Abort
4 		Retry
5 		Ignore
6 		Yes
7 		No
%END REM

Dim answer As Integer
answer = MsgBox( MESSAGE, MB_YESNO + MB_ICONQUESTION, TITLE )
If ( answer = 6 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="Prompt">
<![CDATA["%REM
---------------------------------------------------------------------------------------------------------------
TYPE
---------------------------------------------------------------------------------------------------------------
PROMPT_OK (1)
PROMPT_OKCANCELCOMBO (5)
PROMPT_OKCANCELEDIT (3)
PROMPT_OKCANCELEDITCOMBO (6)
PROMPT_OKCANCELLIST (4)
PROMPT_OKCANCELLISTMULT (7)
PROMPT_PASSWORD (10)
PROMPT_YESNO (2)
PROMPT_YESNOCANCEL (11)
PROMPT_CHOOSEDATABASE (13)
%END REM

Dim ws as New NotesUIWorkspace, choice as Variant
choice = ws.Prompt( TYPE, TITLE, PROMPT [, DEFAULT_VALUE ] [, VALUES ] )
If Not IsEmpty( choice ) Then
	
End If
"]]>
<children count="0">
</children>
</entry>
<entry name="PickListCollection">
<![CDATA["Dim ws As New NotesUIWorkspace, dc As NotesDocumentCollection
Set dc = ws.PickListCollection( 3, IS_MULTY, SERVER_NAME, DB_PATH, ""VIEW_NAME"", ""TITLE"", ""PROMPT"" )
If ( dc.Count > 0 ) Then
	Dim docSelect As NotesDocument
	Set docSelect = dc.GetFirstDocument
	Do While Not ( docSelect Is Nothing )
		
		Set docSelect = dc.GetNextDocument( docSelect )
	Loop
End If"]]>
<children count="0">
</children>
</entry>
<entry name="DialogBox">
<![CDATA["Dim ws As New NotesUIWorkspace
If ws.DialogBox( FORM_NAME, True, True, True, False, False, False, TITLE, DOC_CONTEXT, True, True ) Then

End If"]]>
<children count="0">
</children>
</entry>
<entry name="OpenFileDialog">
<![CDATA["Dim ws as New NotesUIWorkspace, files as Variant
files = ws.OpenFileDialog(  IS_MULTY, [TITLE], [FILTER], [INIT_DIR] , [INIT_FILE])
If IsEmpty( files ) Then
	
Else
	
End if"]]>
<children count="0">
</children>
</entry>
<entry name="SaveFileDialog">
<![CDATA["Dim ws as New NotesUIWorkspace, files as Variant
files = ws.SaveFileDialog(  IS_DIRECTORIES, [TITLE], [FILTER], [INIT_DIR] , [INIT_FILE])
If IsEmpty( files ) Then
	
Else
	
End if"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Перебор NotesDocumentCollection"">
<![CDATA["If ( dc.Count > 0 ) Then
	Dim doc As NotesDocument
	Set doc = dc.GetFirstDocument
	Do While Not ( doc Is Nothing )
			
		Set doc = dc.GetNextDocument( doc )
	Loop
End If"]]>
<children count="0">
</children>
</entry>
<entry name="templates">
<children count="3">
<entry name="root">
<![CDATA["	On Error Goto error_point
	
exit_point:
	Exit Sub
	
error_point:
	On Error Goto 0
	Msgbox ""ELEMENT 'NAME' :: "" & Getthreadinfo(1) &  "" ( ln: "" & Erl & "", nm: "" & Err & "" ) >> "" & Error$, 64, ""Application error""
	Resume exit_point
"]]>
<children count="0">
</children>
</entry>
<entry name="Procedure">
<children count="2">
<entry name="Function">
<![CDATA["Function FUNC_NAME( in_param as Variant ) As Variant
	On Error Goto error_point
	
	Exit Function
	
error_point:
	Error Err, Getthreadinfo(1) &  "" ( ln: "" & Erl & "", nm: "" & Err & "" ) >> "" & Error$	
End Function"]]>
<children count="0">
</children>
</entry>
<entry name="Sub">
<![CDATA["Sub SUB_NAME( in_param As Variant )
	On Error Goto error_point
	
	Exit Sub
	
error_point:
	Error Err, Getthreadinfo(1) &  "" ( ln: "" & Erl & "", nm: "" & Err & "" ) >> "" & Error$	
End Sub"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="Class">
<children count="3">
<entry name="Sub">
<![CDATA["Sub SUB_NAME( in_param As Variant )
	On Error Goto error_point
	

	Exit Sub
		
error_point:
	Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) &  "" ( ln: "" & Erl & "", nm: "" & Err & "" ) >> "" & Error$
End Sub"]]>
<children count="0">
</children>
</entry>
<entry name="Function">
<![CDATA["Function FUNCTION_NAME( in_param As Variant ) As Variant
	On Error Goto error_point
	

	Exit Function
		
error_point:
	Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) &  "" ( ln: "" & Erl & "", nm: "" & Err & "" ) >> "" & Error$
End Function"]]>
<children count="0">
</children>
</entry>
<entry name=""Property Get"">
<![CDATA["Property Get PROPERTY_NAME As Variant
	On Error Goto error_point
	
	Exit Property
	
error_point:
	Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) &  "" ( ln: "" & Erl & "", nm: "" & Err & "" ) >> "" & Error$
End Property"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="fbyte">
<children count="3">
<entry name="templates">
<children count="4">
<entry name="root">
<![CDATA["	Dim fPackagesManager As FPlatform_Abstract_PackagesManager
	Set fPackagesManager = getFPackagesManager( PACKAGE_NAME_FBYTE_CORE & "";"" & PACKAGE_NAME_FBYTE_BASE )
	Call fPackagesManager.initialize()
	
	Dim  fLog As FPlatform_Log, fLogger As FPlatform_Log_Logger
	Set fLog = fPackagesManager.log
	Set fLogger = fLog.addLoggerForm( FORM_NAME, LOGGER_NAME  )
	'Set fLogger = fLog.addLoggerView( LOGGER_NAME )
	'Set fLogger = fLog.addLoggerPage( PAGE_NAME, LOGGER_NAME )
	'Set fLogger = fLog.addLoggerSubform( SUBFORM_NAME, LOGGER_NAME )
	'Set fLogger = fLog.addLoggerAgent()
	On Error Goto error_point
	
exit_point:
	On Error Goto 0
	If ( fPackagesManager.terminate()) Then
		Msgbox ""Submited successfully"", 64, ""Application message""
	Else
		Call fLog.showInfo()
	End If
	Exit Sub
	
error_point:
	Call fLogger.fatal()
	Resume exit_point"]]>
<children count="0">
</children>
</entry>
<entry name=""Option Declare"">
<![CDATA["Option Declare

Use ""fbyte"""]]>
<children count="0">
</children>
</entry>
<entry name="Class">
<children count="2">
<entry name="core">
<children count="8">
<entry name="Sub">
<![CDATA["Sub SUB_NAME( in_param as Variant )
	On Error Goto error_point
	Call Me.logger.enter()
	Call Me.logger.parameter( ""in_param"", in_param, GetThreadInfo(0) )
	
	Call Me.logger.exit( GetThreadInfo(0))
	Exit Sub
		
error_point:
	Call Me.logger.fatal()
End Sub"]]>
<children count="0">
</children>
</entry>
<entry name="Function">
<![CDATA["Function FUNCTION_NAME( in_param As Variant ) As VARIANT
	On Error Goto error_point
	Call Me.logger.enter()
	Call Me.logger.parameter( ""in_param"", in_param, GetThreadInfo(0) )

	Call Me.logger.result( FUNCTION_NAME, GetThreadInfo(0))
	Call Me.logger.exit( GetThreadInfo(0))
	Exit Function

error_point:
	Call Me.logger.fatal()
End Function"]]>
<children count="0">
</children>
</entry>
<entry name=""Class - объект модуля"">
<![CDATA["'======================================================================================================================================
'	CLASS CLASS_NAME
'======================================================================================================================================
Class CLASS_NAME As FCore_Abstract_ModuleObject

	'----------------------------------------------------------------------------------------------------------------------------------
	'	PUBLIC:
	'----------------------------------------------------------------------------------------------------------------------------------
	'// Для гибкости у класса FByte_Abstract_Object не задан конструктор.
	'// Поэтому Конструктор можно менять НО необходимо НЕ ЗАБЫВАТЬ задавать ссылку на родительский сервис
	Sub New( in_parentService as Variant )
		On Error Goto error_point
		Set Me.parentService = in_parentService
		Exit Sub
		
	error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get PROPERTY_NAME As VARIANT
		On Error Goto error_point

		Exit Property
			
	error_point:
		Call Me.logger.fatal()
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub SUB_NAME( in_param as Variant )
		On Error Goto error_point
	
		Exit Sub
		
	error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function FUNCTION_NAME( in_param As Variant ) As VARIANT
		On Error Goto error_point
		
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
End Class

"]]>
<children count="0">
</children>
</entry>
<entry name=""Class - служба модуля сущностей"">
<![CDATA["'======================================================================================================================================
'	CLASS CLASS_NAME
'======================================================================================================================================
Class CLASS_NAME As FCore_Abstract_ModuleEntitiesService

	'----------------------------------------------------------------------------------------------------------------------------------
	'	PUBLIC:
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub New( in_parentService As FPlatform_Abstract_PackageService )
		On Error GoTo error_point
		
		'm_isMultyDatabasesService = True
		Exit Sub
		
error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function initialize() As Boolean
		initialize = True
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function terminate() As Boolean
		terminate = True
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function isConfigured( in_fTextBuffer As FMisc_Text_Buffer ) As Boolean
		On Error GoTo error_point
		
		isConfigured = True
		Exit Function
		
error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get domain As String
		On Error GoTo error_point
		
		domain = Me.parentService.domain & "".DOMAIN""
		Exit Property
		
	error_point:
		Error Err, TypeName( Me )  & ""."" & GetThreadInfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get db As NotesDatabase
		On Error GoTo error_point
		
		If ( m_db Is Nothing ) Then
			Dim fCoreService As FCore_Service, fCoreDatabases As FCore_Databases_Service
			Set fCoreService = Me.packagesManager.getPackageServiceByPackageName( PACKAGE_NAME_FBYTE_CORE )
			Set fCoreDatabases = fCoreService.databases
		'	Set m_db = fCoreDatabases.getNotesDatabaseById( DATABASE_KEY )
		End If
		Set db = m_db
		Exit Property
		
error_point:
		Call Me.logger.fatal()
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Function createEntity( in_fLink As FPlatform_Link ) As FPlatform_Abstract_Entity
		On Error GoTo error_point
		
		Dim path As String
		path = replaceSubString( in_fLink.url.path, ""/"", ""."" )
		Select Case path
			
			Case Else:
				Call Me.logger.error( ""URL path '"" & path & ""' is not supported in servise "" & TypeName( Me ), GetThreadInfo(0))	
		End Select
		Exit Function
		
error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function hasEntity( in_fLink As FPlatform_Link ) As Boolean
		On Error GoTo error_point
		
		Dim path As String
		path = replaceSubString( in_fLink.url.path, ""/"", ""."" )
		Select Case path
			
			Case Else
				Call Me.logger.error( ""URL path '"" & path & ""' is not supported in servise "" & TypeName( Me ), GetThreadInfo(0))
		End Select
		Exit Function
		
error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function getEntity( in_fLink As FPlatform_Link ) As FPlatform_Abstract_Entity
		On Error GoTo error_point
		
		Dim path As String
		path = replaceSubString( in_fLink.url.path, ""/"", ""."" )
		Select Case path
			
			Case Else
				Call Me.logger.error( ""URL path '"" & path & ""' is not supported in servise "" & TypeName( Me ), GetThreadInfo(0))
		End Select
		Exit Function
		
error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------	
	Function saveEntity( in_fEntity As FPlatform_Abstract_Entity ) As FPlatform_Link
		On Error GoTo error_point
		
		Select Case in_fEntity.domain
			
			Case Else
				Call Me.logger.error( ""Object of domain '"" & in_fEntity.domain & ""' is not supported in servise "" & TypeName( Me ), GetThreadInfo(0))
		End Select
		Exit Function
		
error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------	
	Sub removeEntity( in_fEntity As FPlatform_Abstract_Entity )
		On Error GoTo error_point
		
		Select Case in_fEntity.domain
		
		Case Else:
			Call Me.logger.error( ""Object of domain '"" & in_fEntity.domain & ""' is not supported in servise "" & TypeName( Me ), GetThreadInfo(0))
		End Select
		Exit Sub
		
error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function getDocEntity( in_doc As NotesDocument ) As FPlatform_Abstract_Entity
		On Error GoTo error_point
		
		Select Case LCase( in_doc.form(0))
			
		Case Else:
			Error 1001, ""The data of type '"" & in_doc.form(0) & ""' of parameter 'in_doc.form(0)' is not supported""
		End Select
		Exit Function
		
error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function loadJSON( in_jObject As JSONObject ) As FPlatform_Abstract_Object
		On Error GoTo error_point
		
		Dim domain As String
		domain = in_jObject.GetItemValue( ""domain"" )
		If ( domain = """" ) Then
			Error 1001, ""JSON has not field 'domain'. "" & in_jObject.ToJSON()
		Else
			Dim id As String
			id = in_jObject.GetItemValue( ""id"" )
			Select Case domain
				
			Case Else
				Call Me.logger.error( ""Type of entity '"" & domain & ""' is not supported"", GetThreadInfo(0))	
			End Select
		End If
		Exit Function
		
error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function addEntity As FCore_Abstract_Entity
		On Error GoTo error_point
		
		Dim doc As New NotesDocument( Me.db )
		Call doc.ReplaceItemValue( ""form"", DOMAIN )
		Call doc.ReplaceItemValue( ""domain"", DOMAIN )
		Set addEntity = Me.getDocEntity( doc )
		Exit Function
		
error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function hasEntityById( in_id As String ) As Boolean
		On Error GoTo error_point
		
		Dim fEntity As FCore_Abstract_Entity
		Set fEntity = Me.getElement( in_id, VIEW_NAME, Me.db )
		hasEntityById = Not ( fEntity Is Nothing )
		Exit Function
		
error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function getEntityById( in_id As String ) As FCore_Abstract_Entity
		On Error GoTo error_point
		
		Dim fEntity As FCore_Abstract_Entity
		Set fEntity = Me.getElement( in_id, VIEW_NAME, Me.db )
		If ( fEntity Is Nothing ) Then
			Call Me.logger.error( ""Entity by id '"" & in_id & ""' has not found"", GetThreadInfo(0))
		Else
			Set getEntityById = fEntity
		End If
		Exit Function
		
error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub removeEntityById( in_id As String )
		On Error GoTo error_point
		
		Dim fEntity As FCore_Abstract_Entity
		Set fEntity = Me.getElement( in_id, VIEW_NAME, Me.db )
		If ( fEntity Is Nothing ) Then
			Call Me.logger.warn( ""Entity by id '"" & in_id & ""' has not found"", GetThreadInfo(0))
		Else
			Call Me.removeEntity( fEntity )
		End If
		Exit Sub
		
error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get PROPERTY_NAME As Variant
		On Error GoTo error_point

		Exit Property
			
	error_point:
		Call Me.logger.fatal()
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub SUB_NAME( in_param As Variant )
		On Error GoTo error_point
	
		Exit Sub
		
	error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function FUNCTION_NAME( in_param As Variant ) As Variant
		On Error GoTo error_point
		
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
End Class"]]>
<children count="0">
</children>
</entry>
<entry name="Property">
<![CDATA["Property Get PROPERTY_NAME As VARIANT
	On Error Goto error_point
	Call Me.logger.enter( GetThreadInfo(0))
	
	Call Me.logger.exit( GetThreadInfo(0))
	Exit Property
		
error_point:
	Call Me.logger.fatal()
End Property"]]>
<children count="0">
</children>
</entry>
<entry name=""Class - служба пакета"">
<![CDATA["'======================================================================================================================================
'	CLASS CLASS_NAME
'======================================================================================================================================
Class CLASS_NAME As FCore_Abstract_PackageService

	'----------------------------------------------------------------------------------------------------------------------------------
	'	PUBLIC:
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub New( in_ps As Variant )
		On Error Goto error_point

		Exit Sub
		
	error_point:
		Error Err, Typename( Me )  & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub initialize()
		On Error Goto error_point
		
		Call FCore_Abstract_PackagesManager..initialize()
		Exit Sub
		
	error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub terminate()
		On Error Goto error_point
		
		Call FCore_Abstract_PackagesManager..terminate()
		Exit Sub
		
	error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function isConfigured As Boolean
		On Error Goto error_point
		
		isConfigured = FCore_Abstract_PackagesManager..isConfigured()
		Exit Function 
		
	error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function get( PACKAGE as Variant ) As Boolean
		On Error Goto error_point
		
		Set Me.get = FCore_Abstract_PackagesManager..get( PACKAGE )
		Exit Function 
		
	error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get domain As String
		On Error Goto error_point
		
		domain = Me.parentService.domain & "".DOMAIN""
		Exit Property
		
	error_point:
		Error Err, Typename( Me )  & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Function createObject( in_link As Variant ) As Variant
		On Error Goto error_point
		Call Me.logger.enter()
		Call Me.logger.parameter( ""in_link"", in_link )

		Set createObject = Nothing	
		If ( in_link.domain Like ""OBJECT_DOMAIN_COMMON_PART.*"" ) Then
			Set createObject = Me.SERVICE_PROPERTY.createObject( in_link )
		Else
			Call Me.log.error( ""Type of data '"" & in_link.domain & ""' of parameter 'in_link.domain' is not supported"" )
		End If
		
		Call Me.logger.exit()
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function getObject( in_link As Variant ) As Variant
		On Error Goto error_point
		Call Me.logger.enter()
		Call Me.logger.parameter( ""in_link"", in_link )
		
		If ( in_link.domain Like ""OBJECT_DOMAIN_COMMON_PART.*"" ) Then
			Set getObject = Me.SERVICE_PROPERTY.getObject( in_link )
		Else
			Call Me.log.error( ""Type of data '"" & in_link.domain & ""' of parameter 'in_link.domain' is not supported"" )
		End If
		
		Call Me.logger.exit()
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function getDocObject( in_doc As NotesDocument ) As Variant
		On Error Goto error_point
		Call Me.logger.enter()
		Call Me.logger.parameter( ""in_doc"", in_doc )
		
		Dim d as String
		d = in_doc.domain(0)
		
		Select Case Lcase( in_doc.form(0))
		Case FORM_NAME :
			
		Case Else:
			Call Me.logger.error( ""Type of document '"" & in_doc.form(0) & ""' is not supported"" )
		End Select
		
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function module As VARIANT
		On Error Goto error_point
		Call Me.logger.enter()
				
		
		Call Me.logger.exit()
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
End Class

"]]>
<children count="0">
</children>
</entry>
<entry name=""Class - менеджер пакетов"">
<![CDATA["'======================================================================================================================================
'	CLASS CLASS_NAME
'======================================================================================================================================
Class CLASS_NAME As FCore_Abstract_PackagesManager

	'----------------------------------------------------------------------------------------------------------------------------------
	'	PUBLIC:
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub New( in_ps As Variant )
		On Error Goto error_point

		Exit Sub
		
	error_point:
		Error Err, Typename( Me )  & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub initialize()
		On Error Goto error_point
		
		Call FCore_Abstract_PackagesManager..initialize()
		Exit Sub
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub terminate()
		On Error Goto error_point
		
		Call FCore_Abstract_PackagesManager..terminate()
		Exit Sub
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function isConfigured As Boolean
		On Error Goto error_point
		
		isConfigured = FCore_Abstract_PackagesManager..isConfigured()
		Exit Function 
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function get( PACKAGE as Variant ) As Boolean
		On Error Goto error_point
		
		Set Me.get = FCore_Abstract_PackagesManager..get( PACKAGE )
		Exit Function 
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get domain As String
		On Error Goto error_point
		
		domain = Me.parentService.domain & "".DOMAIN""
		Exit Property
		
	error_point:
		Error Err, Typename( Me )  & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get PROPERTY_NAME As Variant
		On Error Goto error_point
		Call Me.logger.enter()
		
		Call Me.logger.result( PROPERTY_NAME )
		Call Me.logger.exit()
		Exit Property
			
	error_point:
		Call Me.logger.fatal()
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub SUB_NAME( in_param as Variant )
		On Error Goto error_point
		Call Me.logger.enter()
		Call Me.logger.parameter( ""in_param"", in_param )
				
		Call Me.logger.exit()
		Exit Sub
		
	error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function createObject( in_link As Variant ) As Variant
		On Error Goto error_point
		Call Me.logger.enter()
		Call Me.logger.parameter( ""in_link"", in_link )

		Set createObject = Nothing	
		If ( in_link.domain Like ""OBJECTS_DOMAIN_COMMON_PART.*"" ) Then
			Set createObject = Me.SERVICE_PROPERTY.createObject( in_link )
		Else
			Call Me.log.error( ""Type of data '"" & in_link.domain & ""' of parameter 'in_link.domain' is not supported"" )
		End If
		
		Call Me.logger.result( createObject )
		Call Me.logger.exit()
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function getObject( in_link As Variant ) As Variant
		On Error Goto error_point
		Call Me.logger.enter()
		Call Me.logger.parameter( ""in_link"", in_link )
		
		If ( in_link.domain Like ""OBJECTS_DOMAIN_COMMON_PART.*"" ) Then
			Set getObject = Me.SERVICE_PROPERTY.getObject( in_link )
		Else
			Call Me.log.error( ""Type of data '"" & in_link.domain & ""' of parameter 'in_link.domain' is not supported"" )
		End If
		
		Call Me.logger.result( getObject )
		Call Me.logger.exit()
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function FUNCTION_NAME( in_param As Variant ) As VARIANT
		On Error Goto error_point
		Call Me.logger.enter()
		Call Me.logger.parameter( ""in_param "", in_param )
		
		Call Me.logger.result( FUNCTION_NAME )
		Call Me.logger.exit()
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
End Class

"]]>
<children count="0">
</children>
</entry>
<entry name=""Class - сущность модуля"">
<![CDATA["'======================================================================================================================================
'	fbyte.core.modulename.classname
'======================================================================================================================================
Public Class FCore_ModuleName_ClassName As FCore_Abstract_Entity
	
	'----------------------------------------------------------------------------------------------------------------------------------
	'	PUBLIC:
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub New( in_doc As NotesDocument, in_fParentService As FPlatform_Abstract_ModuleEntitiesService )
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get domain As String
		On Error GoTo error_point
		
		Me.domain = Me.parentService.domain & "".domain""
		Exit Property
		
	error_point:
		Call Me.logger.fatal()
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get PROPERTY_NAME As VARIANT
		On Error Goto error_point

		Exit Property
			
	error_point:
		Call Me.logger.fatal()
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Set PROPERTY_NAME As VARIANT
		On Error Goto error_point

		Exit Property
			
	error_point:
		Call Me.logger.fatal()
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub cloneToObject( in_fObject As FPlatform_Abstract_Object )
		On Error GoTo error_point
		
		Call FCore_Abstract_Entity..cloneToObject( in_fObject )
		
		Dim fEntity as FCore_ModuleName_ClassName
		Set fEntity = in_fObject
		'// TODO Copy all properties
		Exit Sub
		
	error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------	
End Class"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="base">
<children count="7">
<entry name=""Class - служба модуля"">
<![CDATA["'======================================================================================================================================
'	CLASS CLASS_NAME
'======================================================================================================================================
Class CLASS_NAME As FBase_Abstract_ModuleService

	'----------------------------------------------------------------------------------------------------------------------------------
	'	PUBLIC:
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub New( in_ps As Variant )
		On Error Goto error_point

		Exit Sub
		
	error_point:
		Error Err, Typename( Me ) & "".""  & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub initialize()
		On Error Goto error_point
		
		Call FBase_Abstract_ModuleService..initialize()
		Exit Sub
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub terminate()
		On Error Goto error_point
		
		Call FBase_Abstract_ModuleService..terminate()
		Exit Sub
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function isConfigured As Boolean
		On Error Goto error_point
		
		isConfigured = FBase_Abstract_ModuleService..isConfigured()
		Exit Function 
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get domain As String
		On Error Goto error_point

		domain = Me.parentService.domain & "".DOMAIN""
		Exit Property
		
	error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get PROPERTY_NAME As Variant
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Property
			
	error_point:
		Call Me.logger.fatal()
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub SUB_NAME( in_param as Variant )
		On Error Goto error_point
		
		Exit Sub
		
	error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function createObject( in_link As Variant ) As Variant
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		Call Me.logger.parameter( ""in_link"", in_link, Getthreadinfo(0))

		Set createObject = Nothing	
		If ( in_link.domain = OBJECT_DOMAIN_NAME ) Then
			'// Insert here code for create new object
			'Set createObject =
		Else
			Call Me.logger.error( ""Type of data '"" & in_link.domain & ""' of parameter 'in_link.domain' is not supported"", GetThreadInfo(0))
		End If
		
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function getObject( in_link As Variant ) As Variant
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		Call Me.logger.parameter( ""in_link"", in_link, Getthreadinfo(0))
		
		If ( in_link.domain = OBJECT_DOMAIN_NAME ) Then
			'// Insert here code for get object by link
			'Set getObject =
		Else
			Call Me.logger.error( ""Type of data '"" & in_link.domain & ""' of parameter 'in_link.domain' is not supported"", GetThreadInfo(0))
		End If
		
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function getDocObject( in_doc As NotesDocument ) As Variant
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		Call Me.logger.parameter( ""in_doc"", in_doc, Getthreadinfo(0))
		
		Select Case Lcase( in_doc.form(0))
		Case FORM_NAME :
			
		Case Else:
			Call Me.logger.error( ""Type of document '"" & in_doc.form(0) & ""' is not supported"" )
		End Select
		
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function FUNCTION_NAME( in_param As Variant ) As VARIANT
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		Call Me.logger.parameter( ""in_param"", in_param, Getthreadinfo(0))
				
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
End Class

"]]>
<children count="0">
</children>
</entry>
<entry name=""Class - объект модуля (Обертка)"">
<![CDATA["'======================================================================================================================================
'	CLASS CLASS_NAME
'======================================================================================================================================
Class CLASS_NAME As FBase_Abstract_ModuleObject_Doc

	'----------------------------------------------------------------------------------------------------------------------------------
	'	PUBLIC:
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub New( in_doc As NotesDocument, in_ps As Variant )
		On Error Goto error_point

		Exit Sub
		
	error_point:
		Error Err, Typename( Me ) & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get domain As String
		On Error Goto error_point

		domain = Me.parentService.domain & "".DOMAIN""
		Exit Property
		
	error_point:
		Error Err, Typename( Me ) & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get PROPERTY_NAME As Variant
		On Error Goto error_point
		
		Exit Property
			
	error_point:
		Call Me.logger.fatal()
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub SUB_NAME( in_param as Variant )
		On Error Goto error_point
		
		Exit Sub
		
	error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function FUNCTION_NAME( in_param As Variant ) As Variant
		On Error Goto error_point
		
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub loadJSON( in_jObject As JSONObject )
		On Error Goto error_point
		

		Call FBase_Abstract_Object_Doc..loadJSON( in_jObject )
	
		Me.SCALAR_PROPERTY_NAME = in_jObject.GetItemValue( ITEM_NAME )
		Set Me.OBJECT_PROPERTY_NAME = in_jObject.GetItemValue( ITEM_NAME )
		
		Exit Sub
	
	error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function toJSON() As JSONObject
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
	
		Dim jObject As JSONObject
		Set jObject = FBase_Abstract_Object_Doc..toJSON()
		Call jObject.AddItem( ITEM_NAME, Me.SCALAR_PROPERTY_NAME )
		Call jObject.AddItem( ITEM_NAME, Me.OBJECT_PROPERTY_NAME.toJSON())
		Set toJSON = jObject
		
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Function
	
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
End Class

"]]>
<children count="0">
</children>
</entry>
<entry name=""Class - объект модуля"">
<![CDATA["'======================================================================================================================================
'	CLASS CLASS_NAME
'======================================================================================================================================
Class CLASS_NAME As FBase_Abstract_ModuleObject

	'----------------------------------------------------------------------------------------------------------------------------------
	'	PUBLIC:
	'----------------------------------------------------------------------------------------------------------------------------------
	'// Для гибкости у класса FByte_Abstract_Object не задан конструктор.
	'// Поэтому Конструктор можно менять НО необходимо НЕ ЗАБЫВАТЬ задавать ссылку на родительский сервис
	Sub New( in_parentService as Variant )
		On Error Goto error_point
		Set Me.parentService = in_parentService
		Exit Sub
		
	error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get domain As String
		On Error Goto error_point

		domain = Me.parentService.domain & "".DOMAIN""
		Exit Property
		
	error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get PROPERTY_NAME As Variant
		On Error Goto error_point
		
		Exit Property
			
	error_point:
		Call Me.logger.fatal()
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub SUB_NAME( in_param as Variant )
		On Error Goto error_point
		
		Exit Sub
		
	error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function FUNCTION_NAME( in_param As Variant ) As Variant
		On Error Goto error_point
		
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
End Class

"]]>
<children count="0">
</children>
</entry>
<entry name=""Class - служба пакета"">
<![CDATA["'======================================================================================================================================
'	CLASS CLASS_NAME
'======================================================================================================================================
Class CLASS_NAME As FBase_Abstract_PackageService

	'----------------------------------------------------------------------------------------------------------------------------------
	'	PUBLIC:
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub New( in_ps As Variant )
		On Error Goto error_point

		Exit Sub
		
	error_point:
		Error Err, Typename( Me ) & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub initialize()
		On Error Goto error_point
		
		Call FBase_Abstract_PackageService..initialize()
		Exit Sub
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub terminate()
		On Error Goto error_point
		
		Call FBase_Abstract_PackageService..terminate()
		Exit Sub
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function isConfigured As Boolean
		On Error Goto error_point
		
		isConfigured = FBase_Abstract_PackageService..isConfigured()
		Exit Function 
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function getModuleService( MODULE As Variant ) As Variant
		On Error Goto error_point
		
		Set Me.getModuleService = FBase_Abstract_PackageService..getModuleService( MODULE )
		Exit Function 
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get domain As String
		On Error Goto error_point

		domain = Me.parentService.domain & "".DOMAIN""
		Exit Property
		
	error_point:
		Error Err, Typename( Me ) & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get PROPERTY_NAME As Variant
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		
		Call Me.logger.result( PROPERTY_NAME, GetThreadInfo(0))
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Property
			
	error_point:
		Call Me.logger.fatal()
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub SUB_NAME( in_param as Variant )
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		Call Me.logger.parameter( ""in_param"", in_param, Getthreadinfo(0))
			
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Sub
		
	error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function createObject( in_link As Variant ) As Variant
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		Call Me.logger.parameter( ""in_link"", in_link, Getthreadinfo(0))

		Set createObject = Nothing	
		If ( in_link.domain Like ""OBJECTS_DOMAIN_COMMON_PART.*"" ) Then
			Set createObject = Me.SERVICE_PROPERTY.createObject( in_link )
		Else
			Call Me.logger.error( ""Type of data '"" & in_link.domain & ""' of parameter 'in_link.domain' is not supported"", GetThreadInfo(0))
		End If
		
		Call Me.logger.result( createObject, GetThreadInfo(0))
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function getObject( in_link As Variant ) As Variant
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		Call Me.logger.parameter( ""in_link"", in_link, Getthreadinfo(0))
		
		If ( in_link.domain Like ""OBJECTS_DOMAIN_COMMON_PART.*"" ) Then
			Set getObject = Me.SERVICE_PROPERTY.getObject( in_link )
		Else
			Call Me.logger.error( ""Type of data '"" & in_link.domain & ""' of parameter 'in_link.domain' is not supported"", GetThreadInfo(0))
		End If
		
		Call Me.logger.result( getObject, GetThreadInfo(0))
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function FUNCTION_NAME( in_param As Variant ) As VARIANT
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		Call Me.logger.parameter( ""in_param "", in_param, Getthreadinfo(0))
		
		Call Me.logger.result( FUNCTION_NAME, GetThreadInfo(0))
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
End Class

"]]>
<children count="0">
</children>
</entry>
<entry name="Sub">
<![CDATA["Sub SUB_NAME( in_param as Variant )
	On Error Goto error_point
	
	Exit Sub
		
error_point:
	Call Me.logger.fatal()
End Sub"]]>
<children count="0">
</children>
</entry>
<entry name="Function">
<![CDATA["Function FUNCTION_NAME( in_param As Variant ) As VARIANT
	On Error Goto error_point
	
	Exit Function

error_point:
	Call Me.logger.fatal()
End Function"]]>
<children count="0">
</children>
</entry>
<entry name=""Class - менеджер пакетов"">
<![CDATA["'======================================================================================================================================
'	CLASS CLASS_NAME
'======================================================================================================================================
Class CLASS_NAME As FBase_Abstract_PackagesManager

	'----------------------------------------------------------------------------------------------------------------------------------
	'	PUBLIC:
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub New( in_ps As Variant )
		On Error Goto error_point

		Exit Sub
		
	error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub initialize()
		On Error Goto error_point
		
		Call FBase_Abstract_PackagesManager..initialize()
		Exit Sub
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub terminate()
		On Error Goto error_point
		
		Call FBase_Abstract_PackagesManager..terminate()
		Exit Sub
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function isConfigured As Boolean
		On Error Goto error_point
		
		isConfigured = FBase_Abstract_PackagesManager..isConfigured()
		Exit Function 
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function get( PACKAGE as Variant ) As Boolean
		On Error Goto error_point
		
		Set Me.get = FBase_Abstract_PackagesManager..get( PACKAGE )
		Exit Function 
		
error_point:
		Error Err, Typename( Me ) & ""."" & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get domain As String
		On Error Goto error_point
		
		domain = Me.parentService.domain & "".DOMAIN""
		Exit Property
		
	error_point:
		Error Err, Typename( Me ) & Getthreadinfo(1) & "" ( nm: "" & Err & "", ln: "" & Erl & "" ) >> "" & Error$	
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Property Get PROPERTY_NAME As Variant
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		
		Call Me.logger.result( PROPERTY_NAME, GetThreadInfo(0))
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Property
			
	error_point:
		Call Me.logger.fatal()
	End Property
	'----------------------------------------------------------------------------------------------------------------------------------
	Sub SUB_NAME( in_param as Variant )
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		Call Me.logger.parameter( ""in_param"", in_param, Getthreadinfo(0))
				
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Sub
		
	error_point:
		Call Me.logger.fatal()
	End Sub
	'----------------------------------------------------------------------------------------------------------------------------------
	Function createObject( in_link As Variant ) As Variant
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		Call Me.logger.parameter( ""in_link"", in_link, Getthreadinfo(0))

		Set createObject = Nothing	
		If ( in_link.domain Like ""OBJECTS_DOMAIN_COMMON_PART.*"" ) Then
			Set createObject = Me.SERVICE_PROPERTY.createObject( in_link )
		Else
			Call Me.log.error( ""Type of data '"" & in_link.domain & ""' of parameter 'in_link.domain' is not supported"", GetThreadInfo(0))
		End If
		
		Call Me.logger.result( createObject, GetThreadInfo(0))
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function getObject( in_link As Variant ) As Variant
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		Call Me.logger.parameter( ""in_link"", in_link, Getthreadinfo(0))
		
		If ( in_link.domain Like ""OBJECTS_DOMAIN_COMMON_PART.*"" ) Then
			Set getObject = Me.SERVICE_PROPERTY.getObject( in_link )
		Else
			Call Me.log.error( ""Type of data '"" & in_link.domain & ""' of parameter 'in_link.domain' is not supported"", GetThreadInfo(0))
		End If
		
		Call Me.logger.result( getObject, GetThreadInfo(0))
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function saveObject( in_object As Variant ) As Variant
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		Call Me.logger.parameter( ""in_object"", in_object, Getthreadinfo(0))

		Set saveObject = Nothing
		If ( in_object.domain Like ""OBJECTS_DOMAIN_COMMON_PART.*"" ) Then
			Set saveObject = Me.SERVICE_PROPERTY.saveObject( in_link )
		Else
			Call Me.log.error( ""Type of data '"" & in_link.domain & ""' of parameter 'in_link.domain' is not supported"", GetThreadInfo(0))
		End If
		
		Call Me.logger.result( saveObject, GetThreadInfo(0))
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
	Function FUNCTION_NAME( in_param As Variant ) As VARIANT
		On Error Goto error_point
		Call Me.logger.enter( Getthreadinfo(0))
		Call Me.logger.parameter( ""in_param "", in_param, Getthreadinfo(0))
				
		Call Me.logger.exit( Getthreadinfo(0))
		Exit Function
		
	error_point:
		Call Me.logger.fatal()
	End Function
	'----------------------------------------------------------------------------------------------------------------------------------
End Class

"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="Procedure">
<children count="2">
<entry name="Sub">
<![CDATA["Sub SUB_NAME( in_param as Variant, in_fLogger As FPlatform_Log_Logger )
	On Error Goto error_point
	Call in_fLogger.enter( Getthreadinfo(0))
	Call in_fLogger.parameter( ""in_param"", in_param, Getthreadinfo(0))
	
	Call in_fLogger.exit( Getthreadinfo(0))
	Exit Sub
	
error_point:
	Call in_fLogger.fatal()
End Sub"]]>
<children count="0">
</children>
</entry>
<entry name="Function">
<![CDATA["Function FUNCTION_NAME( in_param as Variant, in_fLogger As FPlatform_Log_Logger ) As Variant
	On Error Goto error_point
	Call in_fLogger.enter( Getthreadinfo(0))
	Call in_fLogger.parameter( ""in_param"", in_param, Getthreadinfo(0))
	
	Call in_fLogger.result( FUNCTION_NAME, Getthreadinfo(0))
	Call in_fLogger.exit( Getthreadinfo(0))
	Exit Function
		
error_point:
	Call in_fLogger.fatal()
End Function"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name=""Перебор FMisc_Collections_Array"">
<![CDATA["If ( fArray.Count = 0 ) Then
	Forall elm In fArray.Array
		
	End Forall
End If"]]>
<children count="0">
</children>
</entry>
<entry name="reference">
<children count="22">
<entry name="base">
<children count="3">
<entry name="directory">
<children count="4">
<entry name="consts">
<children count="4">
<entry name="DOMAIN_FBASE_DIRECTORY_ORGANIZATION">
<![CDATA[DOMAIN_FBASE_DIRECTORY_ORGANIZATION]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FBASE_DIRECTORY_DEPARTMENT">
<![CDATA[DOMAIN_FBASE_DIRECTORY_DEPARTMENT]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FBASE_DIRECTORY_POST">
<![CDATA[DOMAIN_FBASE_DIRECTORY_POST]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FBASE_DIRECTORY_EMPLOYEE">
<![CDATA[DOMAIN_FBASE_DIRECTORY_EMPLOYEE]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="dialogSelectStructure">
<![CDATA["Dim mx As MixCollection
Set mx = sm.base.directory.dialogSelectStructure( IS_MULTY )
If ( mx.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectPosts">
<![CDATA["Dim mx As MixCollection
Set mx = sm.base.directory.dialogSelectPosts( IS_MULTY )
If ( mx.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectEmployees">
<![CDATA["Dim mx As MixCollection
Set mx = sm.base.directory.dialogSelectEmployees( IS_MULTY )
If ( mx.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="dictionaries">
<children count="12">
<entry name="consts">
<children count="2">
<entry name="DOMAIN_FBASE_DICTIONARIES_DICTIONARY">
<![CDATA[DOMAIN_FBASE_DICTIONARIES_DICTIONARY]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FBASE_DICTIONARIES_ENTRY">
<![CDATA[DOMAIN_FBASE_DICTIONARIES_ENTRY]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="dialogSelectEntries">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fBaseDictionaries.dialogSelectEntries( FBase_Dictionaries_Dictionary, IS_MULTY )
If ( fArray.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="okato">
<children count="2">
<entry name="dialogSelectEntries">
<![CDATA["Dim mx As MixCollection
Set mx = sm.base.dictionaries.okato.dialogSelectEntries( IS_MULTY )
If ( mx.Count > 0 ) Then
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="consts">
<children count="1">
<entry name="DOMAIN_FBASE_DICTIONARIES_OKATO_ENTRY">
<![CDATA[DOMAIN_FBASE_DICTIONARIES_OKATO_ENTRY]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="okin">
<children count="2">
<entry name="dialogSelectEntries">
<![CDATA["Dim mx As MixCollection
Set mx = sm.base.dictionaries.okin.dialogSelectEntries( SECTION_ID, IS_MULTY )
If ( mx.Count > 0 ) Then
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="consts">
<children count="1">
<entry name="DOMAIN_FBASE_DICTIONARIES_OKIN_ENTRY">
<![CDATA[DOMAIN_FBASE_DICTIONARIES_OKIN_ENTRY]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="dialogSelectDictionaries">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fBaseDictionaries.dialogSelectDictionaries( IS_MULTY )
If ( fArray.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name=""Dim fBaseDictionaries as FBase_Dictionaries_Service"">
<![CDATA["Dim fBaseDictionaries as FBase_Dictionaries_Service
Set fBaseDictionaries = fBase.dictionaries"]]>
<children count="0">
</children>
</entry>
<entry name="addDictionary">
<![CDATA["Dim fBaseDictionary as FBase_Dictionaries_Dictionary
Set fBaseDictionary = fBaseDictionaries.addDictionary()"]]>
<children count="0">
</children>
</entry>
<entry name="getDictionaryById">
<![CDATA["Dim fBaseDictionary as FBase_Dictionaries_Dictionary
Set fBaseDictionary = fBaseDictionaries.getDictionaryById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeDictionaryById">
<![CDATA["Call fBaseDictionaries.removeDictionaryById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addEntry">
<![CDATA["Dim fBaseDictionaryEntry as FBase_Dictionaries_Entry
Set fBaseDictionaryEntry = fBaseDictionaries.addEntry()"]]>
<children count="0">
</children>
</entry>
<entry name="getEntryById">
<![CDATA["Dim fBaseDictionaryEntry as FBase_Dictionaries_Entry
Set fBaseDictionaryEntry = fBaseDictionaries.getEntryById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeEntryById">
<![CDATA["Call fBaseDictionaries.removeEntryById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Dim fBase as FBase_Service"">
<![CDATA["Dim fBase as FBase_Service
Set fBase = fPackagesManager.getPackageServiceByPackageName( PACKAGE_NAME_FBYTE_BASE )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="misc">
<children count="8">
<entry name="getUIViewDocuments">
<![CDATA["Dim dc As NotesDocumentCollection
Set dc = getUIViewDocuments()
If ( dc.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="FormInspector">
<![CDATA["	Dim rules As String	'// TO DO Требуется локализация
	rules = {
		category : ?* : поле 'Категория' не заполнено;
		title : ?* : поле 'Название' не заполнено;
		id : ?* : поле 'Ключ' не заполнено;
	}
	
	Dim insp As New FormInspector( INSPECTED_OBJECT/ NOTES_DOCUMENT )
	Call insp.loadRules( rules )
	If ( insp.isCorrect()) Then
		
	End If"]]>
<children count="0">
</children>
</entry>
<entry name="text">
<children count="8">
<entry name="getNewLineSymbol">
<![CDATA["Dim symbolNL as String
symbolNL = getNewLineSymbol()"]]>
<children count="0">
</children>
</entry>
<entry name="getEncodeUTF8Text">
<![CDATA["Dim text as String
text = getEncodeUTF8Text( text )"]]>
<children count="0">
</children>
</entry>
<entry name="maskAlignLeft">
<![CDATA["Dim TEXT as String
TEXT = maskAlignLeft( TEXT$, MASK_CHAR$, LENGTH% )"]]>
<children count="0">
</children>
</entry>
<entry name="maskAlignRight">
<![CDATA["Dim TEXT as String
TEXT = maskAlignRight( TEXT$, MASK_CHAR$, LENGTH% )"]]>
<children count="0">
</children>
</entry>
<entry name="replaceSubstring">
<![CDATA["Dim TEXT as String
TEXT = replaceSubstring( TEXT$, FIND$, REPLACEMENT$ )"]]>
<children count="0">
</children>
</entry>
<entry name="repeat">
<![CDATA["Dim TEXT as String
TEXT = replaceSubstring( TEXT$, COUNT% )"]]>
<children count="0">
</children>
</entry>
<entry name="maskAlignCenter">
<![CDATA["Dim TEXT as String
TEXT = maskAlignCenter( TEXT$, MASK_CHAR$, LENGTH% )"]]>
<children count="0">
</children>
</entry>
<entry name=""Dim fMiscTextBuffer as FMisc_Text_Buffer"">
<![CDATA["Dim fMiscTextBuffer as New FMisc_Text_Buffer( INDENT_SIZE )
With fMiscTextBuffer.indent
	.symbol = "" ""
	.size = 3
	.count = 0
End With"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="collections">
<children count="1">
<entry name="array">
<children count="28">
<entry name=""Dim fArray as New FMisc_Collections_Array"">
<![CDATA["Dim fArray as New FMisc_Collections_Array"]]>
<children count="0">
</children>
</entry>
<entry name="appendValue">
<![CDATA["Call fArray.appendValue( VALUE )"]]>
<children count="0">
</children>
</entry>
<entry name="removeValue">
<![CDATA["Call fArray.removeValue( VALUE )"]]>
<children count="0">
</children>
</entry>
<entry name="appendCollection">
<![CDATA["Call fArray.appendCollection( COLLECTION )"]]>
<children count="0">
</children>
</entry>
<entry name="removeCollection">
<![CDATA["Call fArray.removeCollection( COLLECTION )"]]>
<children count="0">
</children>
</entry>
<entry name="clear">
<![CDATA["Call fArray.clear()"]]>
<children count="0">
</children>
</entry>
<entry name="trim">
<![CDATA["Call fArray.trim()"]]>
<children count="0">
</children>
</entry>
<entry name="clone">
<![CDATA["Call fArray.clone( FMisc_Collections_Array )"]]>
<children count="0">
</children>
</entry>
<entry name=""element SET"">
<![CDATA["Set fArray.element( POSITION ) = VALUE"]]>
<children count="0">
</children>
</entry>
<entry name="setValueByPosition">
<![CDATA["Call fArray.setValueByPosition( VALUE, POSITION )"]]>
<children count="0">
</children>
</entry>
<entry name="getValueByPosition">
<![CDATA["Dim VALUE As Variant
Set VALUE = fArray.getValueByPosition( POSITION )"]]>
<children count="0">
</children>
</entry>
<entry name="removeValueByPosition">
<![CDATA["Call fArray.removeValueByPosition( POSITION )"]]>
<children count="0">
</children>
</entry>
<entry name=""element GET"">
<![CDATA["Dim VALUE As Variant
Set VALUE = fArray.element( POSITION )"]]>
<children count="0">
</children>
</entry>
<entry name="count">
<![CDATA["Dim i as Integer
i = fArray.count"]]>
<children count="0">
</children>
</entry>
<entry name="array">
<![CDATA["If ( fArray.Count = 0 ) Then
	Dim a as Variant
	a = fArray.array
End If"]]>
<children count="0">
</children>
</entry>
<entry name="unique">
<![CDATA["Call fArray.unique()"]]>
<children count="0">
</children>
</entry>
<entry name="uniqueByPropertyName">
<![CDATA["Call fArray.uniqueByPropertyName( PROPERTY_NAME )"]]>
<children count="0">
</children>
</entry>
<entry name="isValidPosition">
<![CDATA["Dim isValid as Boolean
isValid = fArray.isValidPosition( POSITION )
If ( isValid ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="join">
<![CDATA["Dim textLine as String
textLine = fArray.join( PROPERTY_NAME, DELIMETER )"]]>
<children count="0">
</children>
</entry>
<entry name="split">
<![CDATA["Call fArray.split( TEXT_LINE, DELIMETER )"]]>
<children count="0">
</children>
</entry>
<entry name="invert">
<![CDATA["Call fArray.invert()"]]>
<children count="0">
</children>
</entry>
<entry name="sort">
<![CDATA["Call fArray.sort()"]]>
<children count="0">
</children>
</entry>
<entry name="getValuesByPropertyName">
<![CDATA["Dim fArrayValues as FMisc_Collections_Array
Set fArrayValues = fArray.getValuesByPropertyName( PROPERTY_NAME )
If ( fArrayValues.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="hasValue">
<![CDATA["Dim hasValue as Boolean
hasValue = fArray.hasValue( VALUE )
If ( hasValue ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="loadJSON">
<![CDATA["Call fArray.loadJSON( JSONObject, FPlatform_Abstract_PackagesManager )"]]>
<children count="0">
</children>
</entry>
<entry name="toJSON">
<![CDATA["Dim jObject as JSONObject
Set jObject = fArray.toJSON( IS_FULLOBJECT )"]]>
<children count="0">
</children>
</entry>
<entry name="sortByPropertyName">
<![CDATA["Call fArray.sortByPropertyName( PROPERTY_NAME )"]]>
<children count="0">
</children>
</entry>
<entry name="map">
<![CDATA["Dim fArrayResult As FMisc_Collections_Array
Set fArrayResult = fArray.map( ""transform"", {
	Function transform( in_index as Long, in_element as Variant ) as String
		'// Some operation with arguments
		'// For example: transform = ""["" & in_element.title & ""]""
	End Function
})"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="inspector">
<children count="1">
<entry name=""Dim fMiscInspector As FMisc_Inspector"">
<![CDATA["Dim rules As String
rules = {
	FIELD_NAME : LIKE_PATTERN : ERRROR_TEXT;
	FIELD_NAME : LIKE_PATTERN : ERRROR_TEXT
}

Dim fMiscInspector As New FMisc_Inspector( NOTES_DOCUMENT )
Call fMiscInspector.loadRules( rules )
If ( fMiscInspector.isCorrect()) Then
		
End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="capi">
<children count="2">
<entry name="replaceDesign">
<![CDATA["Call replaceDesign( SERVER_NAME_FROM, FILE_PATH_FROM, SERVER_NAME_TO, FILE_PATH_TO )"]]>
<children count="0">
</children>
</entry>
<entry name="hideDesign">
<![CDATA["Call hideDesign( SERVER_NAME, FILE_PATH )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="isUiDocSaved">
<![CDATA["Dim isSaved as Boolean
isSaved = isUiDocSaved( NOTES_UI_DOCUMENT )
If ( isSaved ) Then

End If"]]>
<children count="0">
</children>
</entry>
<entry name="winapi">
<children count="1">
<entry name="PopupMenu">
<children count="34">
<entry name=""Dim fPopupMenu As FMisc_PopupMenu"">
<![CDATA["Dim fPopupMenu As FMisc_PopupMenu"]]>
<children count="0">
</children>
</entry>
<entry name="setPosition">
<![CDATA["Call fPopupMenu.setPosition( in_x As Long, in_y As Long )"]]>
<children count="0">
</children>
</entry>
<entry name="getPosition">
<![CDATA["Call fPopupMenu.getPosition( out_x As Long, out_y As Long )"]]>
<children count="0">
</children>
</entry>
<entry name="appendItem">
<![CDATA["Call fPopupMenu.appendItem( in_itemName As String )"]]>
<children count="0">
</children>
</entry>
<entry name="getItem">
<![CDATA["Dim itemText as String
itemText = fPopupMenu.getItem( in_pos As Long )"]]>
<children count="0">
</children>
</entry>
<entry name="insertItem">
<![CDATA["Call fPopupMenu.insertItem( in_itemName As String, in_pos as Long )"]]>
<children count="0">
</children>
</entry>
<entry name="removeItem">
<![CDATA["Call fPopupMenu.removeItem( in_pos As Long )"]]>
<children count="0">
</children>
</entry>
<entry name="countOfItems">
<![CDATA["Dim count As Long
count = fPopupMenu.countOfItems
"]]>
<children count="0">
</children>
</entry>
<entry name="appendSubmenu">
<![CDATA["Call fPopupMenu.appendSubmenu( in_fMenu As FMisc_PopupMenu, in_itemName As String )"]]>
<children count="0">
</children>
</entry>
<entry name="insertSubmenu">
<![CDATA["Call fPopupMenu.insertSubmenu( in_fMenu As FMisc_PopupMenu, in_itemName As String, in_pos as Long )"]]>
<children count="0">
</children>
</entry>
<entry name="appendSeparator">
<![CDATA["Call fPopupMenu.appendSeparator()"]]>
<children count="0">
</children>
</entry>
<entry name="insertSeparator">
<![CDATA["Call fPopupMenu.insertSeparator( in_pos as Long )"]]>
<children count="0">
</children>
</entry>
<entry name="appendBreak">
<![CDATA["Call fPopupMenu.appendBreak( in_itemName As String )"]]>
<children count="0">
</children>
</entry>
<entry name="insertBreak">
<![CDATA["Call fPopupMenu.insertBreak( in_itemName As String, in_pos As Long )"]]>
<children count="0">
</children>
</entry>
<entry name="appendBarBreak">
<![CDATA["Call fPopupMenu.appendBarBreak( in_itemName As String )"]]>
<children count="0">
</children>
</entry>
<entry name="insertBarBreak">
<![CDATA["Call fPopupMenu.insertBarBreak( in_itemName As String, in_pos As Long )"]]>
<children count="0">
</children>
</entry>
<entry name="enableItem">
<![CDATA["Call fPopupMenu.enableItem( in_pos As Long )"]]>
<children count="0">
</children>
</entry>
<entry name="disableItem">
<![CDATA["Call fPopupMenu.disableItem( in_pos As Long )"]]>
<children count="0">
</children>
</entry>
<entry name="checkItem">
<![CDATA["Call fPopupMenu.checkItem( in_pos As Long )"]]>
<children count="0">
</children>
</entry>
<entry name="uncheckItem">
<![CDATA["Call fPopupMenu.uncheckItem( in_pos As Long )"]]>
<children count="0">
</children>
</entry>
<entry name="checkRadioItem">
<![CDATA["Call fPopupMenu.checkRadioItem( in_pStart As Integer, in_pEnd As Integer, in_pos As Integer  )"]]>
<children count="0">
</children>
</entry>
<entry name="handle">
<![CDATA["Dim hMenu As Long
hMenu = fPopupMenu.handle"]]>
<children count="0">
</children>
</entry>
<entry name="show">
<![CDATA["Dim itemText as String
itemText = fPopupMenu.show()"]]>
<children count="0">
</children>
</entry>
<entry name="hiliteItem">
<![CDATA["Call fPopupMenu.hiliteItem( in_pos As Long )"]]>
<children count="0">
</children>
</entry>
<entry name="unhiliteItem">
<![CDATA["Call fPopupMenu.unhiliteItem( in_pos As Long )"]]>
<children count="0">
</children>
</entry>
<entry name="setDefaultItem">
<![CDATA["Call fPopupMenu.setDefaultItem( in_pos As Long )"]]>
<children count="0">
</children>
</entry>
<entry name="clearDefaultItem">
<![CDATA["Call fPopupMenu.clearDefaultItem()"]]>
<children count="0">
</children>
</entry>
<entry name="getSelectedPositions">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fPopupMenu.getSelectedPositions()"]]>
<children count="0">
</children>
</entry>
<entry name="getSelectedItems">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fPopupMenu.getSelectedItems()"]]>
<children count="0">
</children>
</entry>
<entry name=""animation GET"">
<![CDATA["Dim isAnimation as Boolean
isAnimation = fPopupMenu.animation"]]>
<children count="0">
</children>
</entry>
<entry name="getSubMenuArray">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fPopupMenu.getSubMenuArray()"]]>
<children count="0">
</children>
</entry>
<entry name="addParentMenu">
<![CDATA["Call fPopupMenu.addParentMenu( in_fPopupMenu As FMisc_PopupMenu )"]]>
<children count="0">
</children>
</entry>
<entry name="getParentMenuArray">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fPopupMenu.getParentMenuArray()"]]>
<children count="0">
</children>
</entry>
<entry name="removeParentMenu">
<![CDATA["Call fPopupMenu.removeParentMenu( in_fPopupMenu As FMisc_PopupMenu )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name=""Dim fPackagesManager As FPlatform_Abstract_PackagesManager"">
<![CDATA["Dim fPackagesManager As FPlatform_Abstract_PackagesManager
Set fPackagesManager = getFPackagesManager( PACKAGE_NAME_FBYTE_CORE & "";"" & PACKAGE_NAME_FBYTE_BASE )"]]>
<children count="0">
</children>
</entry>
<entry name="core">
<children count="15">
<entry name="databases">
<children count="11">
<entry name="dialogSelectNotesDatabases">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCoreDatabases.dialogSelectNotesDatabases( True )
If ( fArray.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectDatabases">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCoreDatabases.dialogSelectDatabases( True )
If ( fArray.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="consts">
<children count="1">
<entry name="DOMAIN_FCORE_DATABASE">
<![CDATA[DOMAIN_FCORE_DATABASE]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="getNotesDatabaseByDatabase">
<![CDATA["Dim db as NotesDatabase
Set db = fCoreDatabases.getNotesDatabaseByDatabase( FPLATFORM_ABSTRACT_OBJECT )
"]]>
<children count="0">
</children>
</entry>
<entry name="getDatabaseByNotesDatabase">
<![CDATA["Dim fCoreDatabase as FCore_Databases_Database
Set fCoreDatabase = fCoreDatabases.getDatabaseByNotesDatabase( NOTES_DATABASE )
"]]>
<children count="0">
</children>
</entry>
<entry name=""Dim fCoreDatabases as FCore_Databases_Service"">
<![CDATA["Dim fCoreDatabases as FCore_Databases_Service
Set fCoreDatabases = fCore.databases"]]>
<children count="0">
</children>
</entry>
<entry name="db">
<![CDATA["Dim db as NotesDatabase
Set db = fCoreDatabases.db"]]>
<children count="0">
</children>
</entry>
<entry name="getNotesDatabaseById">
<![CDATA["Dim db as NotesDatabase
Set db = fCoreDatabases.getNotesDatabaseById( ID )
"]]>
<children count="0">
</children>
</entry>
<entry name="getDatabaseById">
<![CDATA["Dim fCoreDatabase as FCore_Databases_Database
Set fCoreDatabase = fCoreDatabases.getDatabaseById( ID )
"]]>
<children count="0">
</children>
</entry>
<entry name="addDatabase">
<![CDATA["Dim fCoreDatabase as FCore_Databases_Database
Set fCoreDatabase = fCoreDatabases.addDatabase()"]]>
<children count="0">
</children>
</entry>
<entry name="removeDatabaseById">
<![CDATA["Call fCoreDatabases.removeDatabaseById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="model">
<children count="22">
<entry name="dialogSelectClasses">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCoreModel.dialogSelectClasses( IS_MULTY )
If ( fArray.Count = 0 ) Then

Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="consts">
<children count="7">
<entry name="DOMAIN_FBASE_MODEL_CLASS">
<![CDATA[DOMAIN_FBASE_MODEL_CLASS]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FBASE_MODEL_PROPERTY">
<![CDATA[DOMAIN_FBASE_MODEL_PROPERTY]]>
<children count="0">
</children>
</entry>
<entry name="FBASE_MODEL_PRTY_DATA_TYPE_TEXT">
<![CDATA[FBASE_MODEL_PRTY_DATA_TYPE_TEXT]]>
<children count="0">
</children>
</entry>
<entry name="FBASE_MODEL_PRTY_DATA_TYPE_NUMBER">
<![CDATA[FBASE_MODEL_PRTY_DATA_TYPE_NUMBER]]>
<children count="0">
</children>
</entry>
<entry name="FBASE_MODEL_PRTY_DATA_TYPE_DATE_TIME">
<![CDATA[FBASE_MODEL_PRTY_DATA_TYPE_DATE_TIME]]>
<children count="0">
</children>
</entry>
<entry name="FBASE_MODEL_PRTY_DATA_TYPE_OBJECT_LINK">
<![CDATA[FBASE_MODEL_PRTY_DATA_TYPE_OBJECT_LINK]]>
<children count="0">
</children>
</entry>
<entry name="FBASE_MODEL_PRTY_DATA_TYPE_OBJECT">
<![CDATA[FBASE_MODEL_PRTY_DATA_TYPE_OBJECT]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="dialogSelectPropertiesByClass">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCoreModel.dialogSelectPropertiesByClass( IS_MULTY, FCORE_MODEL_CLASS )
If ( fArray.Count = 0 ) Then

Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAllClasses">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCoreModel.getAllClasses()
If ( fArray.count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getClassById">
<![CDATA["Dim fCoreModelClass as FCore_Model_Class
Set fCoreModelClass = fCoreModel.getClassById( ID )
"]]>
<children count="0">
</children>
</entry>
<entry name="getPropertyById">
<![CDATA["Dim fProperty As FCore_Model_AbstractProperty
Set fProperty = fCoreModel.getPropertyById( ID )
"]]>
<children count="0">
</children>
</entry>
<entry name="getAllProperties">
<![CDATA["Dim fArray As FMisc_Collections_array
Set fArray = fCoreModel.getAllProperties
( FCORE_MODEL_CLASS )
If ( fArray.count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getPrimaryKeyProperty">
<![CDATA["Dim fCoreModellProperty As FCore_Model_AbstractScalarPropertyPK
Set fCoreModelProperty = fCoreModel.getPrimaryKeyProperty( FCORE_MODEL_CLASS )
"]]>
<children count="0">
</children>
</entry>
<entry name=""Dim fCoreModel As FCore_Model_Service"">
<![CDATA["Dim fCoreModel as FCore_Model_Service
Set fCoreModel = fCore.model"]]>
<children count="0">
</children>
</entry>
<entry name="addClass">
<![CDATA["Dim fCoreModelClass as FCore_Model_Class
Set fCoreModelClass = fCoreModel.addClass()"]]>
<children count="0">
</children>
</entry>
<entry name="removeClassById">
<![CDATA["Call fCoreModel.removeClassById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addPropertyText">
<![CDATA["Dim fProperty as FCore_Model_PropertyText
Set fProperty = fCoreModel.addPropertyText()"]]>
<children count="0">
</children>
</entry>
<entry name="removePropertyById">
<![CDATA["Call fCoreModel.removePropertyById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addPropertyNumber">
<![CDATA["Dim fProperty as FCore_Model_PropertyNumber
Set fProperty = fCoreModel.addPropertyNumber()"]]>
<children count="0">
</children>
</entry>
<entry name="addPropertyDateTime">
<![CDATA["Dim fProperty as FCore_Model_PropertyDateTime
Set fProperty = fCoreModel.addPropertyDateTime()"]]>
<children count="0">
</children>
</entry>
<entry name="addPropertyObjectLink">
<![CDATA["Dim fProperty as FCore_Model_PropertyObjectLink
Set fProperty = fCoreModel.addPropertyObjectLink()"]]>
<children count="0">
</children>
</entry>
<entry name="addPropertyObject">
<![CDATA["Dim fProperty as FCore_Model_PropertyObject
Set fProperty = fCoreModel.addPropertyObject()"]]>
<children count="0">
</children>
</entry>
<entry name="hasPropertyById">
<![CDATA["If ( fCoreModel.hasPropertyById( ID )) Then

Else

End If
"]]>
<children count="0">
</children>
</entry>
<entry name="getWrapper">
<![CDATA["Dim fWrapper as FCore_Model_Wrapper
Set fWrapper = fCoreModel.getWrapper( NOTES_DOCUMENT, FCORE_MODEL_CLASS )"]]>
<children count="0">
</children>
</entry>
<entry name="hasClassById">
<![CDATA["If ( fCoreModel.hasClassById( ID )) Then

Else

End If
"]]>
<children count="0">
</children>
</entry>
<entry name="getAllClassesByApplication">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCoreModel.getAllClassesByApplication( FCORE_APPLICATIONS_APPLICATION )
If ( fArray.count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectClassesByApplication">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCoreModel.dialogSelectClassesByApplication( FCORE_APPLICATIONS_APPLICATION )
If ( fArray.Count = 0 ) Then

Else
	
End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="settings">
<children count="6">
<entry name="consts">
<children count="12">
<entry name="DOMAIN_FCORE_SETTINGS_SETTING">
<![CDATA[DOMAIN_FCORE_SETTINGS_SETTING]]>
<children count="0">
</children>
</entry>
<entry name="SETTING_TYPE_TEXT">
<![CDATA[SETTING_TYPE_TEXT]]>
<children count="0">
</children>
</entry>
<entry name="SETTING_TYPE_TEXT_MU...">
<![CDATA[SETTING_TYPE_TEXT_MULT]]>
<children count="0">
</children>
</entry>
<entry name="SETTING_TYPE_NUMBER">
<![CDATA[SETTING_TYPE_NUMBER]]>
<children count="0">
</children>
</entry>
<entry name="SETTING_TYPE_NUMBER_MULT">
<![CDATA[SETTING_TYPE_NUMBER_MULT]]>
<children count="0">
</children>
</entry>
<entry name="SETTING_TYPE_DATETIME">
<![CDATA[SETTING_TYPE_DATETIME]]>
<children count="0">
</children>
</entry>
<entry name="SETTING_TYPE_DATETIME_MULT">
<![CDATA[SETTING_TYPE_DATETIME_MULT]]>
<children count="0">
</children>
</entry>
<entry name="SETTING_TYPE_TIMERANGE">
<![CDATA[SETTING_TYPE_TIMERANGE]]>
<children count="0">
</children>
</entry>
<entry name="SETTING_TYPE_RICHTEXT">
<![CDATA[SETTING_TYPE_RICHTEXT]]>
<children count="0">
</children>
</entry>
<entry name="SETTING_TYPE_NAMES">
<![CDATA[SETTING_TYPE_NAMES]]>
<children count="0">
</children>
</entry>
<entry name="SETTING_TYPE_NAMES_MULT">
<![CDATA[SETTING_TYPE_NAMES_MULT]]>
<children count="0">
</children>
</entry>
<entry name="SETTING_TYPE_PASSWORD">
<![CDATA[SETTING_TYPE_PASSWORD]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="dialogSelectSettings">
<![CDATA["Dim fArray as Misc_Collections_Array
Set fArray = fCoreSettings.dialogSelect( IS_MULT, TITLE, PROMPT, CATEGORY, NOTES_DATABASE )
If ( fArray.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getSettingById">
<![CDATA["Dim fCoreSetting as FCore_Settings_Setting
Set fCoreSetting = fCoreSettings.getSettingById( ID, NOTES_DATABASE )"]]>
<children count="0">
</children>
</entry>
<entry name=""Dim fCoreSettings as FCore_Settings_Service"">
<![CDATA["Dim fCoreSettings as FCore_Settings_Service
Set fCoreSettings = fCore.settings"]]>
<children count="0">
</children>
</entry>
<entry name=""addSetting
"">
<![CDATA["Dim fCoreSetting as FCore_Settings_Setting
Set fCoreSetting = fCoreSettings.addSetting( NOTES_DATABASE )"]]>
<children count="0">
</children>
</entry>
<entry name="removeSettingById">
<![CDATA["Call fCoreSettings.removeSettingById( ID, NOTES_DATABASE )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="actions">
<children count="6">
<entry name="addAction">
<![CDATA["Dim fAction As FCore_Actions_Action
Set fAction = fCoreActions.addAction()

"]]>
<children count="0">
</children>
</entry>
<entry name=""Dim fCoreActions as FCore_Actions_Service"">
<![CDATA["Dim fCoreActions as FCore_Actions_Service
Set fCoreActions = fCore.actions"]]>
<children count="0">
</children>
</entry>
<entry name="getActionById">
<![CDATA["Dim fAction As FCore_Actions_Action
Set fAction = fCoreActions.getActionById( ID)"]]>
<children count="0">
</children>
</entry>
<entry name="removeActionById">
<![CDATA["Call fCoreActions.removeActionById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="action">
<children count="25">
<entry name="setContextApplicationLink">
<![CDATA["Call fAction.setContextApplicationLink( FCore_Links_Link )"]]>
<children count="0">
</children>
</entry>
<entry name="getContextApplicationLink">
<![CDATA["Dim fCoreLink as FCore_Links_Link
Set fCoreLink = fAction.getContextApplicationLink()"]]>
<children count="0">
</children>
</entry>
<entry name="removeContextApplicationLink">
<![CDATA["Call fAction.removeContextApplicationLink()"]]>
<children count="0">
</children>
</entry>
<entry name="setContextViewLink">
<![CDATA["Call fAction.setContextViewLink( FCore_Links_Link )"]]>
<children count="0">
</children>
</entry>
<entry name="getContextViewLink">
<![CDATA["Dim fCoreLink as FCore_Links_Link
Set fCoreLink = fAction.getContextViewLink()"]]>
<children count="0">
</children>
</entry>
<entry name="removeContextViewLink">
<![CDATA["Call fAction.removeContextViewLink()"]]>
<children count="0">
</children>
</entry>
<entry name="setContextEntityLink">
<![CDATA["Call fAction.setContextEntityLink( FCore_Links_Link )"]]>
<children count="0">
</children>
</entry>
<entry name="getContextEntityLink">
<![CDATA["Dim fCoreLink as FCore_Links_Link
Set fCoreLink = fAction.getContextEntityLink()"]]>
<children count="0">
</children>
</entry>
<entry name="removeContextEntityLink">
<![CDATA["Call fAction.removeContextEntityLink()"]]>
<children count="0">
</children>
</entry>
<entry name="setRequestEntityLink">
<![CDATA["Call fAction.setRequestEntityLink( FCore_Links_Link )"]]>
<children count="0">
</children>
</entry>
<entry name="getRequestEntityLink">
<![CDATA["Dim fCoreLink as FCore_Links_Link
Set fCoreLink = fAction.getRequestEntityLink()"]]>
<children count="0">
</children>
</entry>
<entry name="removeRequestEntityLink">
<![CDATA["Call fAction.removeRequestEntityLink()"]]>
<children count="0">
</children>
</entry>
<entry name="setResponseEntityLink">
<![CDATA["Call fAction.setResponseEntityLink( FCore_Links_Link )"]]>
<children count="0">
</children>
</entry>
<entry name="getResponseEntityLink">
<![CDATA["Dim fCoreLink as FCore_Links_Link
Set fCoreLink = fAction.getResponseEntityLink()"]]>
<children count="0">
</children>
</entry>
<entry name="removeResponseEntityLink">
<![CDATA["Call fAction.removeResponseEntityLink()"]]>
<children count="0">
</children>
</entry>
<entry name="setResponseMessageBox">
<![CDATA["Call fAction.setResponseMessageBox( FPlatform_UI_MessageBox )"]]>
<children count="0">
</children>
</entry>
<entry name="getResponseMessageBox">
<![CDATA["Dim fMessageBox as FPlatform_UI_MessageBox
Set fMessageBox = fAction.getResponseMessageBox()"]]>
<children count="0">
</children>
</entry>
<entry name="removeResponseMessageBox">
<![CDATA["Call fAction.removeResponseMessageBox()"]]>
<children count="0">
</children>
</entry>
<entry name="setResponseAttachment">
<![CDATA["Call fAction.setResponseAttachment( FILE_PATH )"]]>
<children count="0">
</children>
</entry>
<entry name="exportResponseAttachments">
<![CDATA["Call fAction.exportResponseAttachments( FOLDER_PATH )"]]>
<children count="0">
</children>
</entry>
<entry name="clearResponseAttachments">
<![CDATA["Call fAction.clearResponseAttachments()"]]>
<children count="0">
</children>
</entry>
<entry name="setNextStepNone">
<![CDATA["Call fAction.setNextStepNone()"]]>
<children count="0">
</children>
</entry>
<entry name="setNextStepClose">
<![CDATA["Call fAction.setNextStepClose()"]]>
<children count="0">
</children>
</entry>
<entry name="setNextStepOpenEntity">
<![CDATA["Call fAction.setNextStepOpenEntity( FPlatform_Abstract_Entity )"]]>
<children count="0">
</children>
</entry>
<entry name="setNextStepMessageBox">
<![CDATA["Call fAction.setNextStepMessageBox( FPlatform_UI_MessageBox )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="hasActionById">
<![CDATA["If ( fCoreActions.hasActionById( ID )) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="cache">
<children count="22">
<entry name="getDatabase">
<![CDATA["Dim db As NotesDatabase
Set db = fCoreCache.getDatabase( SERVER, FILE_PATH, REPLICAID )
"]]>
<children count="0">
</children>
</entry>
<entry name="addDatabase">
<![CDATA["Call fCoreCache.addDatabase( NOTES_DATABASE )"]]>
<children count="0">
</children>
</entry>
<entry name="getDocumentByUNID">
<![CDATA["Dim doc as NotesDocument
Set doc = fCoreCache.getDocumentByUNID( UNID, NOTES_DATABASE )
"]]>
<children count="0">
</children>
</entry>
<entry name="isDatabaseAdded">
<![CDATA["Dim isAdded as Boolean
isAdded = fCoreCache.isDatabaseAdded( NOTES_DATABASE )
If ( isAdded ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="removeDatabase">
<![CDATA["Call fCoreCache.removeDatabase( NOTES_DATABASE )"]]>
<children count="0">
</children>
</entry>
<entry name="addNotesView">
<![CDATA["Call fCoreCache.addView( NOTES_VIEW )"]]>
<children count="0">
</children>
</entry>
<entry name="getNotesViewByName">
<![CDATA["Dim vw As NotesView
Set vw = fCoreCache.getNotesViewByName( KEY, NOTES_DATABASE )
"]]>
<children count="0">
</children>
</entry>
<entry name="removeView">
<![CDATA["Call fCoreCache.removeView( NOTES_VIEW )"]]>
<children count="0">
</children>
</entry>
<entry name="addDocument">
<![CDATA["Call fCoreCache.addDocument( NOTES_DOCUMENT )"]]>
<children count="0">
</children>
</entry>
<entry name="getDocumentByKey">
<![CDATA["Dim doc as NotesDocument
Set doc = fCoreCache.getDocumentByKey( KEY, EXACT_MATCH, NOTES_VIEW )
"]]>
<children count="0">
</children>
</entry>
<entry name="getResponses">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fCoreCache.getResponses( NOTES_DOCUMENT )
If ( fArray.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="search">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fCoreCache.search( FORMULLA, NOTES_DATABASE )
If ( fArray.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="removeDocument">
<![CDATA["Call fCoreCache.removeDocument( NOTES_DOCUMENT )"]]>
<children count="0">
</children>
</entry>
<entry name=""SET object"">
<![CDATA["Set fCoreCache.object( KEY ) = object"]]>
<children count="0">
</children>
</entry>
<entry name=""GET object"">
<![CDATA["Set object = fCoreCache.object( KEY )"]]>
<children count="0">
</children>
</entry>
<entry name="remove">
<![CDATA["Call fCoreCache.remove( KEY )"]]>
<children count="0">
</children>
</entry>
<entry name="erase">
<![CDATA["Call fCoreCache.erase()"]]>
<children count="0">
</children>
</entry>
<entry name="getDocumentsByKey">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fCoreCache.getDocumentsByKey( KEY, EXACT_MATCH, NOTES_VIEW )
"]]>
<children count="0">
</children>
</entry>
<entry name="getFirstDocument">
<![CDATA["Dim doc as NotesDocument
Set doc = fCoreCache.getFirstDocument( NOTES_VIEW )
"]]>
<children count="0">
</children>
</entry>
<entry name="getNextDocument">
<![CDATA["Dim doc as NotesDocument
Set doc = fCoreCache.getNextDocument( NOTES_DOCUMENT, NOTES_VIEW )
"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectDocuments">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fCoreCache.dialogSelectDocuments( NOTES_VIEW, IS_MULTY, TITLE, PROMPT, CATEGORY ) 
If ( fArray.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name=""Dim fCoreCache as FCore_Cache_Service"">
<![CDATA["Dim fCoreCache as FCore_Cache_Service
Set fCoreCache = fCore.cache"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="links">
<children count="18">
<entry name="createEmptyLink">
<![CDATA["Dim fCoreLink as FCore_Links_Link
Set fCoreLink = fCoreLinks.createEmptyLink()"]]>
<children count="0">
</children>
</entry>
<entry name="getFromJSON">
<![CDATA["Dim fCoreLink as FCore_Links_Link
Set fCoreLink = fCoreLinks.getFromJSON( JSON_OBJECT ) "]]>
<children count="0">
</children>
</entry>
<entry name="getFirstLink">
<![CDATA["Dim fCoreLink as FCore_Links_Link
Set fCoreLink = fCoreLinks.getFirstLink( PREFIX, NOTES_DOCUMENT )"]]>
<children count="0">
</children>
</entry>
<entry name="getByURL">
<![CDATA["Dim fCoreLink as FCore_Links_Link
Set fCoreLink = fCoreLinks.getByURL( url, title ) "]]>
<children count="0">
</children>
</entry>
<entry name="removeAllLinks">
<![CDATA["Call fCoreLinks.removeAllLinks( PREFFIX, NOTES_DOCUMENT )"]]>
<children count="0">
</children>
</entry>
<entry name="getFromCollection">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCoreLinks.getFromCollection( FMISC_COLLECTIONS_ARRAY )"]]>
<children count="0">
</children>
</entry>
<entry name="removeLink">
<![CDATA["Call fCoreLinks.remove( FPLATFOM_LINK, PREFFIX, NOTES_DOCUMENT )"]]>
<children count="0">
</children>
</entry>
<entry name="getAllLinks">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCoreLinks.getAllLinks( PREFIX, NOTES_DOCUMENT )"]]>
<children count="0">
</children>
</entry>
<entry name="addLink">
<![CDATA["Call fCoreLinks.addLink( FPLATFOM_LINK, PREFFIX, NOTES_DOCUMENT )"]]>
<children count="0">
</children>
</entry>
<entry name="getFromEntity">
<![CDATA["Dim fCoreLink as FCore_Links_Link
Set fCoreLink = fCoreLinks.getFromEntity( FPLATFORM_ABSTRACT_ENTITY )"]]>
<children count="0">
</children>
</entry>
<entry name="getByDomain">
<![CDATA["Dim fCoreLink as FCore_Links_Link
Set fCoreLink = fCoreLinks.getByDomain( DOMAIN, ID, TITLE )"]]>
<children count="0">
</children>
</entry>
<entry name=""Dim fCoreLinks as FCore_Links_Service"">
<![CDATA["Dim fCoreLinks As FCore_Links_Service
Set fCoreLinks = fCore.links"]]>
<children count="0">
</children>
</entry>
<entry name="addLinks">
<![CDATA["Call fCoreLinks.addLinks( FMISC_COLLECTIONS_ARRAY, PREFFIX, NOTES_DOCUMENT )"]]>
<children count="0">
</children>
</entry>
<entry name="removeLinks">
<![CDATA["Call fCoreLinks.removeLinks( FMISC_COLLECTIONS_ARRAY, PREFFIX, NOTES_DOCUMENT )"]]>
<children count="0">
</children>
</entry>
<entry name="setLink">
<![CDATA["Call fCoreLinks.setLink( FPLATFOM_LINK, PREFFIX, NOTES_DOCUMENT )"]]>
<children count="0">
</children>
</entry>
<entry name="setLinks">
<![CDATA["Call fCoreLinks.addLinks( FMISC_COLLECTIONS_ARRAY, PREFFIX, NOTES_DOCUMENT )"]]>
<children count="0">
</children>
</entry>
<entry name="hasLink">
<![CDATA["If ( fCoreLinks.hasLink( FPLATFOM_LINK, PREFFIX, NOTES_DOCUMENT )) Then
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="hasLinks">
<![CDATA["If ( fCoreLinks.hasLinks( PREFFIX, NOTES_DOCUMENT )) Then
	
End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="transaction">
<children count="11">
<entry name="getDocumentByUNID">
<![CDATA["Dim doc as NotesDocumen
Set doc = fCoreTransaction.getDocumentByUNID( UNID, NOTES_DATABASE )
"]]>
<children count="0">
</children>
</entry>
<entry name="saveDocument">
<![CDATA["Call fCoreTransaction.saveDocument( NOTES_DOCUMENT )"]]>
<children count="0">
</children>
</entry>
<entry name="removeDocument">
<![CDATA["Call fCoreTransaction.removeDocument( NOTES_DOCUMENT )"]]>
<children count="0">
</children>
</entry>
<entry name="commit">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fCoreTransaction.commit()
If ( fArray.count = 0 ) Then

Else

End if"]]>
<children count="0">
</children>
</entry>
<entry name="isSaved">
<![CDATA["Dim isSaved as Boolean
isSaved = fCoreTransaction.isSaved( UNID, NOTES_DATABASE )
If ( isSaved ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="isRemoved">
<![CDATA["Dim isRemoved as Boolean
isRemoved = fCoreTransaction.isRemoved( UNID, NOTES_DATABASE )
If ( isRemoved ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getDocumentsByFormula">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fCoreTransaction.getDocumentsByFormula( FORMULLA, NOTES_DATABASE )
"]]>
<children count="0">
</children>
</entry>
<entry name="saveDXL">
<![CDATA["Call fCoreTransaction.saveDXL( DXL, UNID, NOTES_DATABASE )"]]>
<children count="0">
</children>
</entry>
<entry name=""Dim fCoreTransaction as FCore_Transaction_Service"">
<![CDATA["Dim fCoreTransaction as FCore_Transaction_Service
Set fCoreTransaction = fCore.transaction"]]>
<children count="0">
</children>
</entry>
<entry name="clear">
<![CDATA["Call fCoreTransaction.clear()"]]>
<children count="0">
</children>
</entry>
<entry name="rollback">
<![CDATA["Call fCoreTransaction.rollback()"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="licenses">
<children count="4">
<entry name=""Dim fCoreLicenses as FCore_Licenses_Service"">
<![CDATA["Dim fCoreLicenses as FCore_Licenses_Service
Set fCoreLicenses = fCore.licenses"]]>
<children count="0">
</children>
</entry>
<entry name="addLicense">
<![CDATA["Dim fCoreLicense as FCore_Systems_System
Set fCoreLicense = fCoreLicenses.addLicense()"]]>
<children count="0">
</children>
</entry>
<entry name="getLicenseById">
<![CDATA["Dim fCoreLicense as FCore_Licenses_Abstract_License
Set fCoreLicense = fCoreLicenses.getLicenseById( ID )
If ( fCoreLicense Is Nothing ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="removeLicenseById">
<![CDATA["Call fCoreLicenses.removeLicenseById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Dim fCore as FCore_Service"">
<![CDATA["Dim fCore as FCore_Service
Set fCore = fPackagesManager.getPackageServiceByPackageName( PACKAGE_NAME_FBYTE_CORE )"]]>
<children count="0">
</children>
</entry>
<entry name="systems">
<children count="9">
<entry name=""Dim fCoreSystems as FCore_Systems_Service"">
<![CDATA["Dim fCoreSystems as FCore_Systems_Service
Set fCoreSystems = fCore.systems"]]>
<children count="0">
</children>
</entry>
<entry name="addSystem">
<![CDATA["Dim fCoreSystem as FCore_Systems_System
Set fCoreSystem = fCoreSystems.addSystem()"]]>
<children count="0">
</children>
</entry>
<entry name="db">
<![CDATA["Dim db as NotesDatabase
Set db = fCoreSystems.db"]]>
<children count="0">
</children>
</entry>
<entry name="getSystemById">
<![CDATA["Dim fCoreSystem as FCore_Systems_System
Set fCoreSystem = fCoreSystems.getSystemById( ID )
"]]>
<children count="0">
</children>
</entry>
<entry name="getSystemByHost">
<![CDATA["Dim fCoreSystem as FCore_Systems_System
Set fCoreSystem = fCoreSystems.getSystemByHost( HOSTNAME )
"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectSystems">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCoreSystems.dialogSelectSystems( True )
If ( fArray.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="removeSystemById">
<![CDATA["Call fCoreSystems.removeSystemById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="hasSystemById">
<![CDATA["If ( fCoreSystems.hasSystemById( ID )) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="hasSystemByHost">
<![CDATA["If ( fCoreSystems.hasSystemByHost( HOSTNAME )) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="applications">
<children count="6">
<entry name=""Dim fCoreApplications as FCore_Applications_Service"">
<![CDATA["Dim fCoreApplications as FCore_Applications_Service
Set fCoreApplications = fCore.applications"]]>
<children count="0">
</children>
</entry>
<entry name="addApplication">
<![CDATA["Dim fApplication As FCore_Applications_Application
Set fApplication = fCoreApplications.addApplication()"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectApplications">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCoreApplications.dialogSelectApplications( IS_MULTY )
If ( fArray.Count = 0 ) Then

Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getApplicationById">
<![CDATA["Dim fApplication As FCore_Applications_Application
Set fApplication = fCoreApplications.getApplicationById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeApplicationById">
<![CDATA["Call fCoreApplications.removeApplicationById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="hasApplication">
<![CDATA["If ( fCoreApplications.hasApplicationById( ID )) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="attachemnts">
<children count="2">
<entry name=""Dim fAttachments as FCore_Attachments_Service"">
<![CDATA["Dim fCoreAttachments as FCore_Attachments_Service
Set fCoreAttachments = fCore.attachments"]]>
<children count="0">
</children>
</entry>
<entry name="addStorage">
<![CDATA["Dim fStorage As FCore_Attachments_Service
Set fStorage = fCoreAttachments.addStorage()"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="dataflow">
<children count="6">
<entry name=""Dim fBaseDataflow as FBase_Dataflow_Service"">
<![CDATA["Dim fBaseDataflow as FBase_Dataflow_Service
Set fBaseDataflow = fBase.dataflow"]]>
<children count="0">
</children>
</entry>
<entry name="addSubscription">
<![CDATA["Dim fSubscription As FBase_Dataflow_Subscription
Set fSubscription = fBaseDataflow.addSubscription()"]]>
<children count="0">
</children>
</entry>
<entry name="hasSubscriptionById">
<![CDATA["if ( fBaseDataflow.hasSubscriptionById( ID )) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getSubscriptionById">
<![CDATA["Dim fSubscription As FBase_Dataflow_Subscription
Set fSubscription = fBaseDataflow.getSubscriptionById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeSubscribeById">
<![CDATA["Call fBaseDataflow.removeSubscribeById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="publish">
<![CDATA["Call fBaseDataflow.publish( FBase_Abstract_Entity )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="rpc">
<children count="15">
<entry name=""Dim fCoreRPC as FCore_RPC_Service"">
<![CDATA["Dim fCoreRPC as FCore_RPC_Service
Set fCoreRPC = fCore.rpc"]]>
<children count="0">
</children>
</entry>
<entry name="addSession">
<![CDATA["Dim fSession as FCore_RPC_Session
Set fSession = fCoreRPC.addSession()"]]>
<children count="0">
</children>
</entry>
<entry name="hasSessionById">
<![CDATA["If ( fCoreRPC.hasSessionById( ID )) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getSessionById">
<![CDATA["Dim fSession as FCore_RPC_Session
Set fSession = fCoreRPC.getSessionById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeSessionById">
<![CDATA["Call fCoreRPC.removeSessionById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addRequest">
<![CDATA["Dim fRequest as FCore_RPC_Request
Set fRequest = fCoreRPC.addRequest()"]]>
<children count="0">
</children>
</entry>
<entry name="hasRequestById">
<![CDATA["If ( fCoreRPC.hasRequestById( ID )) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getRequestById">
<![CDATA["Dim fRequest as FCore_RPC_Request
Set fRequest = fCoreRPC.getRequestById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeRequestById">
<![CDATA["Call fCoreRPC.removeRequestById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addHandler">
<![CDATA["Dim fHandler as FCore_RPC_Handler
Set fHandler = fCoreRPC.addHandler()"]]>
<children count="0">
</children>
</entry>
<entry name="hasHandlerById">
<![CDATA["If ( fCoreRPC.hasHandlerById( ID )) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getHandlerById">
<![CDATA["Dim fHandler as FCore_RPC_Handler
Set fHandler = fCoreRPC.getHandlerById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeHandlerById">
<![CDATA["Call fCoreRPC.removeHandlerById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectSessions">
<![CDATA["Dim fArraySessions as FMisc_Collections_Array
Set fArraySessions = fCoreRPC.dialogSelectSessions( IS_MULTY )
If ( fArraySessions.count > 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectHandlers">
<![CDATA["Dim fArrayHandlers as FMisc_Collections_Array
Set fArrayHandlers = fCoreRPC.dialogSelectHandlers( IS_MULTY )
If ( fArrayHandlers.count > 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="facade">
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="log">
<children count="11">
<entry name="trace">
<children count="2">
<entry name="Procedure">
<![CDATA["Call in_fBaseLogger.trace( TRACE_INFO, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
<entry name="Class">
<![CDATA["Call Me.logger.trace( TRACE_INFO, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="debug">
<children count="2">
<entry name="Class">
<![CDATA["Call Me.logger.debug( DEBUG_INFO, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
<entry name="Procedure">
<![CDATA["Call in_fBaseLogger.debug( DEBUG_INFO, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="info">
<children count="2">
<entry name="Procedure">
<![CDATA["Call in_fBaseLogger.info( INFO, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
<entry name="Class">
<![CDATA["Call Me.logger.info( INFO, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="warn">
<children count="2">
<entry name="Procedure">
<![CDATA["Call in_fBaseLogger.warn( WARN_TEXT, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
<entry name="Class">
<![CDATA["Call Me.logger.warn( WARN_TEXT, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="error">
<children count="2">
<entry name="Procedure">
<![CDATA["Call in_fBaseLogger.error( ERROR_TEXT, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
<entry name="Class">
<![CDATA["Call Me.logger.error( ERROR_TEXT, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="getLogger">
<children count="6">
<entry name="getLoggerView">
<![CDATA["Dim fBaseLogger As FBase_Log_Logger
Set fBaseLogger =  fBaseLog.getLoggerView( LOGGER_NAME )"]]>
<children count="0">
</children>
</entry>
<entry name="getLoggerPage">
<![CDATA["Dim fBaseLogger As FBase_Log_Logger
Set fBaseLogger =  fBaseLog.getLoggerPage( PAGE_NAME, LOGGER_NAME )"]]>
<children count="0">
</children>
</entry>
<entry name="getLoggerAgent">
<![CDATA["Dim fBaseLogger As FBase_Log_Logger
Set fBaseLogger =  fBaseLog.getLoggerAgent()"]]>
<children count="0">
</children>
</entry>
<entry name="getLogger">
<![CDATA["Dim fBaseLogger As FBase_Log_Logger
Set fBaseLogger =  fBaseLog.getLogger( LOGGER_NAME )"]]>
<children count="0">
</children>
</entry>
<entry name="getLoggerSubform">
<![CDATA["Dim fBaseLogger As FBase_Log_Logger
Set fBaseLogger =  fBaseLog.getLoggerSubform( SUBFORM_NAME, LOGGER_NAME )"]]>
<children count="0">
</children>
</entry>
<entry name="getLoggerForm">
<![CDATA["Dim fBaseLogger As FBase_Log_Logger
Set fBaseLogger =  fBaseLog.getLoggerForm( FORM_NAME, LOGGER_NAME )
"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="parameter">
<children count="2">
<entry name="Class">
<![CDATA["Call Me.logger.parameter( PARAMETER_NAME, PARAMETER_VALUE, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
<entry name="Procedure">
<![CDATA["Call in_fBaseLogger.parameter( PARAMETER_NAME, PARAMETER_VALUE, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="enter">
<children count="2">
<entry name="Class">
<![CDATA["Call Me.logger.enter( Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
<entry name="Procedure">
<![CDATA["Call in_fBaseLogger.enter( Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="exit">
<children count="2">
<entry name="Class">
<![CDATA["Call Me.logger.exit( Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
<entry name="Procedure">
<![CDATA["Call in_fBaseLogger.exit( Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="result">
<children count="2">
<entry name="Class">
<![CDATA["Call Me.logger.result( VALUE, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
<entry name="Procedure">
<![CDATA["Call in_fBaseLogger.result( VALUE, Getthreadinfo(0))"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Dim fBaseLog as FBase_Log_Service"">
<![CDATA["Dim fBaseLog as FBase_Log_Service
Set fBaseLog = fBase.log"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="ci">
<children count="4">
<entry name="assemblies">
<children count="18">
<entry name="consts">
<children count="5">
<entry name="MODULE_NAME_FBYTE_CI_ASSEMBLIES">
<![CDATA[MODULE_NAME_FBYTE_CI_ASSEMBLIES]]>
<children count="0">
</children>
</entry>
<entry name="domain">
<children count="2">
<entry name="DOMAIN_FCI_ASSEMBLIES_DATABASE">
<![CDATA[DOMAIN_FCI_ASSEMBLIES_DATABASE]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FCI_ASSEMBLIES_ASSEMBLY">
<![CDATA[DOMAIN_FCI_ASSEMBLIES_ASSEMBLY]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="locations">
<children count="4">
<entry name="FCI_ASSEMBLY_LOCATION_DEVELOP">
<![CDATA[FCI_ASSEMBLY_LOCATION_DEVELOP]]>
<children count="0">
</children>
</entry>
<entry name="FCI_ASSEMBLY_LOCATION_TESTING">
<![CDATA[FCI_ASSEMBLY_LOCATION_TESTING]]>
<children count="0">
</children>
</entry>
<entry name="FCI_ASSEMBLY_LOCATION_CLIENTS">
<![CDATA[FCI_ASSEMBLY_LOCATION_CLIENTS]]>
<children count="0">
</children>
</entry>
<entry name="FCI_ASSEMBLY_LOCATION_REPOSITORY">
<![CDATA[FCI_ASSEMBLY_LOCATION_REPOSITORY]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="FCI_PROTECTION_TYPE_HIDEDESIGN">
<![CDATA[FCI_PROTECTION_TYPE_HIDEDESIGN]]>
<children count="0">
</children>
</entry>
<entry name="FCI_PROTECTION_TYPE_EXPORT2LSS">
<![CDATA[FCI_PROTECTION_TYPE_EXPORT2LSS]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="getDatabaseById">
<![CDATA["Dim fCIDatabase as FCI_Assemblies_Database
Set fCIDatabase = fCIAssemblies.getDatabaseById( ID )
If ( fCIDatabase Is Nothing ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAssemblyById">
<![CDATA["Dim fCIAssembly as FCI_Assemblies_Assembly
Set fCIAssembly = fCIAssemblies.getAssemblyById( ID )
If ( fCIAssembly Is Nothing ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="addDatabase">
<![CDATA["Dim fCIDatabase as FCI_Assemblies_Database
SEt fCIDatabase = fCIAssemblies.addDatabase()"]]>
<children count="0">
</children>
</entry>
<entry name="getAllDatabases">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCIAssemblies.getAllDatabases()
If ( fArray.count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectAssemblies">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCIAssemblies.dialogSelectAssemblies( IS_MULT )
If ( fArray.count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectDatabasesByAssembly">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCIAssemblies.dialogSelectDatabasesByAssembly( IS_MULT, ASSEMBLY_OBJECT )
If ( fArray.count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAgent">
<![CDATA["Dim fDevDesignAgent as FDev_Design_Agent
Set fDevDesignAgent = fCIAssemblies.getAgent( NOTES_DATABASE )
If ( fDevDesignAgent Is Nothing ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name=""Dim fCIAssemblies as FCI_Assemblies_Service"">
<![CDATA["Dim fCIAssemblies as FCI_Assemblies_Service
Set fCIAssemblies = fCI.assemblies
"]]>
<children count="0">
</children>
</entry>
<entry name="addAgent">
<![CDATA["Dim fDevDesignAgent as FDev_Design_Agent
Set fDevDesignAgent = fCIAssemblies.addAgent( NOTES_DATABASE )"]]>
<children count="0">
</children>
</entry>
<entry name="removeDatabaseById">
<![CDATA["Call fCIAssemblies.removeDatabaseById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addAssembly">
<![CDATA["Dim fCIAssembly as FCI_Assemblies_Assembly
Set fCIAssembly = fCIAssemblies.addAssembly()"]]>
<children count="0">
</children>
</entry>
<entry name=""removeAssemblyById
"">
<![CDATA["Call fCIAssemblies.removeAssemblyById
( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeAgent">
<![CDATA["Call fCIAssemblies.removeAgent( NOTES_DATABASE )"]]>
<children count="0">
</children>
</entry>
<entry name="getAllDatabasesByAssembly">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = fCIAssemblies.getAllDatabasesByAssembly( ASSEMBLY_OBJECT )
If ( fArray.count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getDatabaseByKeyFromAssembly">
<![CDATA["Dim fCIDatabase as FCI_Assemblies_Database
Set fCIDatabase = fCIAssemblies.getDatabaseByKeyFromAssembly( KEY, ASSEMBLY_OBJECT )
If ( fCIDatabase Is Nothing ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getDatabaseByReplicaId">
<![CDATA["Dim fCIDatabase as FCI_Assemblies_Database
Set fCIDatabase = fCIAssemblies.getDatabaseByReplicaId( REPLICA_ID )
If ( fCIDatabase Is Nothing ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="addDatabaseToAssembly">
<![CDATA["Call fCIAssemblies.addDatabaseToAssembly( FCI_Assemblies_Database, FCI_Assemblies_Assembly )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Dim fCI as FCI_Service"">
<![CDATA["Dim fCI as FCI_Service
Set fCI = fPackagesManager.getPackageServiceByPackageName( PACKAGE_NAME_FBYTE_CI )"]]>
<children count="0">
</children>
</entry>
<entry name="actions">
<children count="2">
<entry name=""Dim fCIActions as FCI_Actions_Service"">
<![CDATA["Dim fCIActions as FCI_Actions_Service
Set fCIActions = fCI.actions"]]>
<children count="0">
</children>
</entry>
<entry name=""updateDesign
"">
<![CDATA["Call fCIActions.updateDesign( FCI_DATABASE_OBJECT_TARGET, FCI_DATABASE_OBJECT_TEMPLATE )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="methodology">
<children count="2">
<entry name=""Dim fCIMethodology As FCI_Methodology_Service"">
<![CDATA["Dim fCIMethodology As FCI_Methodology_Service
Set fCIMethodology = fCI.methodology"]]>
<children count="0">
</children>
</entry>
<entry name="isAllowed">
<![CDATA["Dim isAllowed as Boolean
isAllowed = fCIMethodology.isAllowed( FROM_FCI_Assemblies_Assembly, TO_FCI_Assemblies_Assembly )
If ( isAllowed ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="log">
<children count="3">
<entry name="consts">
<children count="6">
<entry name="FBYTE_CORE_LOG_LEVEL_NONE">
<![CDATA[FBYTE_CORE_LOG_LEVEL_NONE]]>
<children count="0">
</children>
</entry>
<entry name="FBYTE_CORE_LOG_LEVEL_TRACE">
<![CDATA[FBYTE_CORE_LOG_LEVEL_TRACE]]>
<children count="0">
</children>
</entry>
<entry name="FBYTE_CORE_LOG_LEVEL_DEBUG">
<![CDATA[FBYTE_CORE_LOG_LEVEL_DEBUG]]>
<children count="0">
</children>
</entry>
<entry name="FBYTE_CORE_LOG_LEVEL_INFO">
<![CDATA[FBYTE_CORE_LOG_LEVEL_INFO]]>
<children count="0">
</children>
</entry>
<entry name="FBYTE_CORE_LOG_LEVEL_WARN">
<![CDATA[FBYTE_CORE_LOG_LEVEL_WARN]]>
<children count="0">
</children>
</entry>
<entry name="FBYTE_CORE_LOG_LEVEL_ERROR">
<![CDATA[FBYTE_CORE_LOG_LEVEL_ERROR]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="class">
<children count="9">
<entry name="trace">
<![CDATA["Call Me.logger.trace( MESSAGE )"]]>
<children count="0">
</children>
</entry>
<entry name="debug">
<![CDATA["Call Me.logger.debug( MESSAGE )"]]>
<children count="0">
</children>
</entry>
<entry name="info">
<![CDATA["Call Me.logger.info( MESSAGE )"]]>
<children count="0">
</children>
</entry>
<entry name="warn">
<![CDATA["Call Me.logger.warn( MESSAGE )"]]>
<children count="0">
</children>
</entry>
<entry name="error">
<![CDATA["Call Me.logger.error( MESSAGE )"]]>
<children count="0">
</children>
</entry>
<entry name="fatal">
<![CDATA["Call Me.logger.fatal()"]]>
<children count="0">
</children>
</entry>
<entry name="enter">
<![CDATA["Call Me.logger.enter()"]]>
<children count="0">
</children>
</entry>
<entry name="parameter">
<![CDATA["Call Me.logger.parameter( PARAMETER_NAME, PARAMETER_VALUE )"]]>
<children count="0">
</children>
</entry>
<entry name="exit">
<![CDATA["Call Me.logger.exit()"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="procedure">
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="controls">
<children count="2">
<entry name="sfec">
<children count="4">
<entry name="Subform">
<children count="3">
<entry name=""Global Options"">
<![CDATA["Option Public
Option Declare

Use ""fbyte.controls.sfec""
"]]>
<children count="0">
</children>
</entry>
<entry name="Postopen">
<![CDATA["	On Error Goto error_point
	
	Set g_CM = New SFECManager()
	
	'Call g_CM.addColumn()
	'Call g_CM.addColumn()
	'Call g_CM.addColumn()

	Call g_CM.loadControl( Source.Document )
	Exit Sub
	
error_point:
	On Error Goto 0
	Error Err, Getthreadinfo(1) & "" ("" & Erl & "") >> "" & Error$"]]>
<children count="0">
</children>
</entry>
<entry name="Queryrecalc">
<![CDATA["	On Error Goto error_point
	
	Call g_CM.actions.recalc()
	Exit Sub
	
error_point:
	On Error Goto 0
	Error Err, Getthreadinfo(1) & "" ("" & Erl & "") >> "" & Error$"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Client code"">
<children count="1">
<entry name="show">
<![CDATA["Dim dialog As New FDialogSFEC
dialog.isAdd	= False
dialog.isModify	= False
dialog.isDelete	= False
dialog.isClear	= False

Dim column As Variant
Set column = dialog.addColumn( COLUMN_NAME, COLUMN_TITLE, VALUES_COLLECTION )
column.isEditable = True

Dim isSubmited As Boolean
isSubmited = dialog.show( SUBFORM_NAME, DIALOG_TITLE )
If ( isSubmited ) Then
	Dim values as MixCollection
	Set values = dialog.column( COLUMN_NAME ).values
	If ( cValues.Count = 0 ) Then
		
	Else
		
	End If
End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Dim fSfecDialog As New FControls_SFEC_Dialog"">
<![CDATA["Dim fArrayValues As New FMisc_Collections_Array
Call fArrayValues.appendValue( ""value_1"" )

Dim fSfecDialog As New FControls_SFEC_Dialog
Call fSfecDialog.addColumn( FIELD_NAME, FIELD_TITLE, fArrayValues )
If ( fSfecDialog.show( SUBFORM_NAME, DIALOG_TITLE ))	Then
	Set fArrayValues = fSfecDialog.column( FIELD_NAME ).values
End If
"]]>
<children count="0">
</children>
</entry>
<entry name="addColumn">
<![CDATA["Call fSfecDialog.addColumn( ""FIELD_NAME"", ""FIELD_TITLE"", fArrayValues )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="dialog">
<children count="2">
<entry name="direction">
<children count="2">
<entry name="consts">
<children count="2">
<entry name="FCONTROLS_DIALOG_DIRECTION_UP">
<![CDATA[FCONTROLS_DIALOG_DIRECTION_UP]]>
<children count="0">
</children>
</entry>
<entry name="FCONTROLS_DIALOG_DIRECTION_DOWN">
<![CDATA[FCONTROLS_DIALOG_DIRECTION_DOWN]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="show">
<![CDATA["	Dim dialog As New FControls_DialogDirection
dlg_point:
	If dialog.show( ""fbyte.controls.dialogDirection"", ""Select direction"" ) Then
		Select Case dialog.result
		Case FCONTROLS_DIALOG_DIRECTION_UP:
			
		Case FCONTROLS_DIALOG_DIRECTION_DOWN:
			
		End Select
	End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="selectIntervalsNumber">
<children count="1">
<entry name="show">
<![CDATA["	Dim dialog As New FControls_DialogSelectIntervalsNumber
dlg_point:
	If dialog.show( ""fbyte.controls.dialogSelectIntervalsNumber"", ""Select number"" ) Then
		Dim number as Long
		number = dialog.result
	End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="hr">
<children count="1">
<entry name="staff">
<children count="38">
<entry name="consts">
<children count="2">
<entry name="domains">
<children count="21">
<entry name="DOMAIN_FHR_STAFF_ORGANIZATION">
<![CDATA[DOMAIN_FHR_STAFF_ORGANIZATION]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_DEPARTMENT">
<![CDATA[DOMAIN_FHR_STAFF_DEPARTMENT]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_UNIT">
<![CDATA[DOMAIN_FHR_STAFF_UNIT]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_EMPLOYEE">
<![CDATA[DOMAIN_FHR_STAFF_EMPLOYEE]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_IDENTITY_CARD">
<![CDATA[DOMAIN_FHR_STAFF_IDENTITY_CARD]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_RELATIVE">
<![CDATA[DOMAIN_FHR_STAFF_RELATIVE]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_LANGUAGE">
<![CDATA[DOMAIN_FHR_STAFF_LANGUAGE]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_EDUCATION">
<![CDATA[DOMAIN_FHR_STAFF_EDUCATION]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_TRANSFERENCE">
<![CDATA[DOMAIN_FHR_STAFF_TRANSFERENCE]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_CLASS_RANK">
<![CDATA[DOMAIN_FHR_STAFF_CLASS_RANK]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_RESERVE">
<![CDATA[DOMAIN_FHR_STAFF_RESERVE]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_AWARD">
<![CDATA[DOMAIN_FHR_STAFF_AWARD]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_SANCTION">
<![CDATA[DOMAIN_FHR_STAFF_SANCTION]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_EDUCATION_ADVANCED">
<![CDATA[DOMAIN_FHR_STAFF_EDUCATION_ADVANCED]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_ATTESTATION">
<![CDATA[DOMAIN_FHR_STAFF_ATTESTATION]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_EXAM">
<![CDATA[DOMAIN_FHR_STAFF_EXAM]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_VACATION">
<![CDATA[DOMAIN_FHR_STAFF_VACATION]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_WORK_PERIOD">
<![CDATA[DOMAIN_FHR_STAFF_WORK_PERIOD]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_EDUCATION_PRO">
<![CDATA[DOMAIN_FHR_STAFF_EDUCATION_PRO]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_POST">
<![CDATA[DOMAIN_FHR_STAFF_POST]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FHR_STAFF_RETRAINING">
<![CDATA[DOMAIN_FHR_STAFF_RETRAINING]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="employee">
<children count="4">
<entry name="FHR_STAFF_EMPLOYEE_STAGE_STAFFER">
<![CDATA[FHR_STAFF_EMPLOYEE_STAGE_STAFFER]]>
<children count="0">
</children>
</entry>
<entry name="FHR_STAFF_EMPLOYEE_STAGE_FRELANCER">
<![CDATA[FHR_STAFF_EMPLOYEE_STAGE_FRELANCER]]>
<children count="0">
</children>
</entry>
<entry name="FHR_STAFF_EMPLOYEE_STAGE_FIRED">
<![CDATA[FHR_STAFF_EMPLOYEE_STAGE_FIRED]]>
<children count="0">
</children>
</entry>
<entry name="FHR_STAFF_EMPLOYEE_STAGE_CANDIDATE">
<![CDATA[FHR_STAFF_EMPLOYEE_STAGE_CANDIDATE]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="dialogSelectEmployees">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).staff.dialogSelectEmployees( IS_MULTY )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeVacations">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).staff.getEmployeeVacations( EMPLOYEE_OBJECT )
If ( mx.Count > 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectPosts">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).staff.dialogSelectPosts( IS_MULTY )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="db">
<![CDATA["Dim dbStaff as NotesDatabase
Set dbStaff = sm.getPackageService( ""fbyte.hr"" ).staff.db"]]>
<children count="0">
</children>
</entry>
<entry name="getAttestation">
<![CDATA["Dim attestation as Variant
Set attestation = sm.getPackageService( ""fbyte.hr"" ).staff.getAttestation( LINK_OBJECT )
If ( attestation Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAward">
<![CDATA["Dim awd as Variant
Set awd = sm.getPackageService( ""fbyte.hr"" ).staff.getAward( LINK_OBJECT )
If ( awd Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getClassRank">
<![CDATA["Dim rank as Variant
Set rank = sm.getPackageService( ""fbyte.hr"" ).staff.getClassRank( LINK_OBJECT )
If ( rank Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getDepartment">
<![CDATA["Dim dep as Variant
Set dep = sm.getPackageService( ""fbyte.hr"" ).staff.getDepartment( LINK_OBJECT )
If ( dep Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEducation">
<![CDATA["Dim edu as Variant
Set edu = sm.getPackageService( ""fbyte.hr"" ).staff.getEducation( LINK_OBJECT )
If ( edu Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEducationAdvanced">
<![CDATA["Dim eduAdv as Variant
Set eduAdv = sm.getPackageService( ""fbyte.hr"" ).staff.getEducationAdvanced( LINK_OBJECT )
If ( eduAdv Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEducationPro">
<![CDATA["Dim eduPro as Variant
Set eduPro = sm.getPackageService( ""fbyte.hr"" ).staff.getEducationPro( LINK_OBJECT )
If ( eduPro Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getExam">
<![CDATA["Dim exam as Variant
Set exam = sm.getPackageService( ""fbyte.hr"" ).staff.getExam( LINK_OBJECT )
If ( exam Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getIdentityCard">
<![CDATA["Dim identityCard as Variant
Set identityCard = sm.getPackageService( ""fbyte.hr"" ).staff.getIdentityCard( LINK_OBJECT )
If ( identityCard Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getLanguage">
<![CDATA["Dim lang as Variant
Set lang = sm.getPackageService( ""fbyte.hr"" ).staff.getLanguage( LINK_OBJECT )
If ( lang Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getOrganization">
<![CDATA["Dim org as Variant
Set org = sm.getPackageService( ""fbyte.hr"" ).staff.getOrganization( LINK_OBJECT )
If ( org Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getPost">
<![CDATA["Dim post as Variant
Set post = sm.getPackageService( ""fbyte.hr"" ).staff.getPost( LINK_OBJECT )
If ( post Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getRelative">
<![CDATA["Dim relative as Variant
Set relative = sm.getPackageService( ""fbyte.hr"" ).staff.getRelative( LINK_OBJECT )
If ( relative Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getReserve">
<![CDATA["Dim reserve as Variant
Set reserve = sm.getPackageService( ""fbyte.hr"" ).staff.getReserve( LINK_OBJECT )
If ( reserve Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getSanction">
<![CDATA["Dim sanction as Variant
Set sanction = sm.getPackageService( ""fbyte.hr"" ).staff.getSanction( LINK_OBJECT )
If ( sanction Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getTransference">
<![CDATA["Dim transfer as Variant
Set transfer = sm.getPackageService( ""fbyte.hr"" ).staff.getTransference( LINK_OBJECT )
If ( transfer Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getUnit">
<![CDATA["Dim unit as Variant
Set unit = sm.getPackageService( ""fbyte.hr"" ).staff.getUnit( LINK_OBJECT )
If ( unit Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getVacation">
<![CDATA["Dim vacation as Variant
Set vacation = sm.getPackageService( ""fbyte.hr"" ).staff.getVacation( LINK_OBJECT )
If ( vacation Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getWorkPeriod">
<![CDATA["Dim wp as Variant
Set wp = sm.getPackageService( ""fbyte.hr"" ).staff.getWorkPeriod( LINK_OBJECT )
If ( wp Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeAttestation">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeAttestation( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeAwards">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeAwards( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeClassRanks">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeClassRanks( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeEducations">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeEducations( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeEducationsAdvanced">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeEducationsAdvanced( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeEducationsPro">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeEducationsPro( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeExams">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeExams( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeIdentityCards">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeIdentityCards( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeLanguages">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeLanguages( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeRelatives">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeRelatives( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeReserves">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeReserves( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeSanctions">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeSanctions( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeTransferences">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeTransferences( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getEmployeeWorkPeriods">
<![CDATA["Dim mx as MixCollection
Set mx = sm.getPackageService( ""fbyte.hr"" ).getEmployeeWorkPeriods( LINK_OBJECT )
If ( mx.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="createEntity">
<![CDATA["Dim fEntity As FPlatform_Abstract_Entity
Set fEntity = fPackagesManager.createEntity( FPlatform_Link )
If ( fEntity Is Nothing ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="bi">
<children count="2">
<entry name="reports">
<children count="0">
</children>
</entry>
<entry name="templates">
<children count="1">
<entry name="consts">
<children count="2">
<entry name="DOMAIN_FBI_TEMPLATES_TEMPLATE">
<![CDATA[DOMAIN_FBI_TEMPLATES_TEMPLATE]]>
<children count="0">
</children>
</entry>
<entry name="FBI_TEMPLATES_TEMPLATE_TYPE_MSWORD">
<![CDATA[FBI_TEMPLATES_TEMPLATE_TYPE_MSWORD]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="engine">
<children count="2">
<entry name="workflow">
<children count="1">
<entry name="consts">
<children count="4">
<entry name="DOMAIN_FENGINE_WORKFLOW_PROCESS">
<![CDATA[DOMAIN_FENGINE_WORKFLOW_PROCESS]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FENGINE_WORKFLOW_STAGE">
<![CDATA[DOMAIN_FENGINE_WORKFLOW_STAGE]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FENGINE_WORKFLOW_TRANSITION">
<![CDATA[DOMAIN_FENGINE_WORKFLOW_TRANSITION]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FENGINE_WORKFLOW_LINK">
<![CDATA[DOMAIN_FENGINE_WORKFLOW_LINK]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="adapters">
<children count="1">
<entry name="consts">
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="facade">
<children count="3">
<entry name="configurations">
<children count="28">
<entry name="consts">
<children count="12">
<entry name="DOMAIN_FFACADE_CONFIGS_APPLICATION">
<![CDATA[DOMAIN_FFACADE_CONFIGS_APPLICATION]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FFACADE_CONFIGS_VIEW">
<![CDATA[DOMAIN_FFACADE_CONFIGS_VIEW]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FFACADE_CONFIGS_FORM">
<![CDATA[DOMAIN_FFACADE_CONFIGS_FORM]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FFACADE_CONFIGS_ACTION">
<![CDATA[DOMAIN_FFACADE_CONFIGS_ACTION]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FFACADE_CONFIGS_FIELD">
<![CDATA[DOMAIN_FFACADE_CONFIGS_FIELD]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FFACADE_CONFIGS_DIRECTORY">
<![CDATA[DOMAIN_FFACADE_CONFIGS_DIRECTORY]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FFACADE_CONFIGS_IMAGE">
<![CDATA[DOMAIN_FFACADE_CONFIGS_IMAGE]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FFACADE_CONFIGS_BRACKETS">
<![CDATA[DOMAIN_FFACADE_CONFIGS_BRACKETS]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FFACADE_CONFIGS_COLUMN">
<![CDATA[DOMAIN_FFACADE_CONFIGS_COLUMN]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FFACADE_CONFIGS_CONDITION">
<![CDATA[DOMAIN_FFACADE_CONFIGS_CONDITION]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FFACADE_CONFIGS_EMBEDDEDVIEW">
<![CDATA[DOMAIN_FFACADE_CONFIGS_EMBEDDEDVIEW]]>
<children count="0">
</children>
</entry>
<entry name="DOMAIN_FFACADE_CONFIGS_OPERATOR">
<![CDATA[DOMAIN_FFACADE_CONFIGS_OPERATOR]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="getAllViewsByApplication">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.getAllViewsByApplication( FFacade_Configurations_Application )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAllActionsByView">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.getAllActionsByView( FFacade_Configurations_View )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAllActionsByForm">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.getAllActionsByForm( FFacade_Configurations_Form )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAllFieldsByForm">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.getAllFieldsByForm( FFacade_Configurations_Form )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAllApplications">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.getAllApplications()
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name=""Dim fFacadeConfigurations As FFacade_Configurations_Service"">
<![CDATA["Dim fFacadeConfigurations as FFacade_Configurations_Service
Set fFacadeConfigurations = fFacade.configurations"]]>
<children count="0">
</children>
</entry>
<entry name="getAllFormsByApplication">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.getAllFormsByApplication( FFacade_Configurations_Application )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="application">
<children count="3">
<entry name="getApplicationById">
<![CDATA["Dim fFacadeApplication As FFacade_Configurations_Application
Set fFacadeApplication = fFacadeConfigurations.getApplicationById( ID )
If ( fFacadeApplication Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="addApplication">
<![CDATA["Dim fFacadeApplication As FFacade_Configurations_Application
Set fFacadeApplication = fFacadeConfigurations.addApplication()"]]>
<children count="0">
</children>
</entry>
<entry name="removeApplicationById">
<![CDATA["Call fFacadeConfigurations.removeApplicationById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="view">
<children count="3">
<entry name="getViewById">
<![CDATA["Dim fFacadeView As FFacade_Configurations_View
Set fFacadeView = fFacadeConfigurations.getViewById( ID )
If ( fFacadeView Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="addView">
<![CDATA["Dim fFacadeView As FFacade_Configurations_View
Set fFacadeView = fFacadeConfigurations.addView()"]]>
<children count="0">
</children>
</entry>
<entry name="removeViewById">
<![CDATA["Call fFacadeConfigurations.removeViewById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="field">
<children count="3">
<entry name="getFieldById">
<![CDATA["Dim fFacadeField As FFacade_Configurations_Field
Set fFacadeField = fFacadeConfigurations.getFieldById( ID )
If ( fFacadeField Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="addField">
<![CDATA["Dim fFacadeField As FFacade_Configurations_Field
Set fFacadeField = fFacadeConfigurations.addField()"]]>
<children count="0">
</children>
</entry>
<entry name="removeFieldById">
<![CDATA["Call fFacadeConfigurations.removeFieldById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="form">
<children count="3">
<entry name="getFormById">
<![CDATA["Dim fFacadeForm As FFacade_Configurations_Form
Set fFacadeForm = fFacadeConfigurations.getFormById( ID )
If ( fFacadeForm Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="addForm">
<![CDATA["Dim fFacadeForm As FFacade_Configurations_Form
Set fFacadeForm = fFacadeConfigurations.addForm()"]]>
<children count="0">
</children>
</entry>
<entry name="removeFormById">
<![CDATA["Call fFacadeConfigurations.removeFormById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="action">
<children count="3">
<entry name="getActionById">
<![CDATA["Dim fFacadeAction As FFacade_Configurations_Action
Set fFacadeAction = fFacadeConfigurations.getActionById( ID )
If ( fFacadeAction Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="addAction">
<![CDATA["Dim fFacadeAction As FFacade_Configurations_Action
Set fFacadeAction = fFacadeConfigurations.addAction()"]]>
<children count="0">
</children>
</entry>
<entry name="removeActionById">
<![CDATA["Call fFacadeConfigurations.removeActionById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="dialogSelect">
<children count="16">
<entry name="dialogSelectActions">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectActions( IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectApplications">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectApplications( IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectViews">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectViews( IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectForms">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectForms( IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectDirectories">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectDirectories( IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectViewsByApplication">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectViewsByApplication( FFacade_Configurations_Application, IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectBracketsByView">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectBracketsByView( FFacade_Configurations_View, IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectBracketsByBrackets">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectBracketsByBrackets( FFacade_Configurations_Brackets, IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectColumnsByView">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectColumnsByView( FFacade_Configurations_View, IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectFormsByApplication">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectFormsByApplication( FFacade_Configurations_Application, IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectActionsByView">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectActionsByView( FFacade_Configurations_View, IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectActionsByForm">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectActionsByForm( FFacade_Configurations_Form, IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectFieldsByForm">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectFieldsByForm( FFacade_Configurations_Form, IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectConditionsByBrackets">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectConditionsByBrackets( FFacade_Configurations_Brackets, IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectConditionsByView">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectConditionsByView( FFacade_Configurations_View, IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectImages">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.dialogSelectImages( IS_MULTY )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="directory">
<children count="3">
<entry name="addDirectory">
<![CDATA["Dim fFacadeDirectory As FFacade_Configurations_Directory
Set fFacadeDirectory = fFacadeConfigurations.addDirectory()"]]>
<children count="0">
</children>
</entry>
<entry name="getDirectoryById">
<![CDATA["Dim fFacadeDirectory As FFacade_Configurations_Directory
Set fFacadeDirectory = fFacadeConfigurations.getDirectoryById( ID )
If ( fFacadeDirectory Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="removeDirectoryById">
<![CDATA["Call fFacadeConfigurations.removeDirectoryById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="image">
<children count="3">
<entry name="addImage">
<![CDATA["Dim fFacadeImage As FFacade_Configurations_Image
Set fFacadeImage = fFacadeConfigurations.addImage()"]]>
<children count="0">
</children>
</entry>
<entry name="getImageById">
<![CDATA["Dim fFacadeImage As FFacade_Configurations_Image
Set fFacadeImage = fFacadeConfigurations.getImageById( ID )
If ( fFacadeImage Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="removeImageById">
<![CDATA["Call fFacadeConfigurations.removeImageById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="brackets">
<children count="3">
<entry name="addBrackets">
<![CDATA["Dim fFacadeBrackets As FFacade_Configurations_Brackets
Set fFacadeBrackets = fFacadeConfigurations.addBrackets()"]]>
<children count="0">
</children>
</entry>
<entry name="getBracketsById">
<![CDATA["Dim fFacadeBrackets As FFacade_Configurations_Brackets
Set fFacadeBrackets = fFacadeConfigurations.getBracketsById( ID )
If ( fFacadeBrackets Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="removeBracketsById">
<![CDATA["Call fFacadeConfigurations.removeBracketsById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="column">
<children count="3">
<entry name="addColumn">
<![CDATA["Dim fFacadeColumn As FFacade_Configurations_Column
Set fFacadeColumn = fFacadeConfigurations.addColumn()"]]>
<children count="0">
</children>
</entry>
<entry name="getColumnById">
<![CDATA["Dim fFacadeColumn As FFacade_Configurations_Column
Set fFacadeColumn = fFacadeConfigurations.getColumnById( ID )
If ( fFacadeColumn Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="removeColumnById">
<![CDATA["Call fFacadeConfigurations.removeColumnById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="condition">
<children count="3">
<entry name="addCondition">
<![CDATA["Dim fFacadeCondition As FFacade_Configurations_Condition
Set fFacadeCondition = fFacadeConfigurations.addCondition()"]]>
<children count="0">
</children>
</entry>
<entry name="getConditionById">
<![CDATA["Dim fFacadeCondition As FFacade_Configurations_Condition
Set fFacadeCondition = fFacadeConfigurations.getConditionById( ID )
If ( fFacadeCondition Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="removeConditionById">
<![CDATA["Call fFacadeConfigurations.removeConditionById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="embeddedView">
<children count="3">
<entry name="addEmbeddedView">
<![CDATA["Dim fFacadeEmbeddedView As FFacade_Configurations_EmbeddedView
Set fFacadeEmbeddedView = fFacadeConfigurations.addEmbeddedView()"]]>
<children count="0">
</children>
</entry>
<entry name="getEmbeddedViewById">
<![CDATA["Dim fFacadeEmbeddedView As FFacade_Configurations_EmbeddedView 
Set fFacadeEmbeddedView = fFacadeConfigurations.getEmbeddedViewById( ID )
If ( fFacadeEmbeddedView Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="removeEmbeddedViewById">
<![CDATA["Call fFacadeConfigurations.removeEmbeddedViewById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="operator">
<children count="3">
<entry name="addOperator">
<![CDATA["Dim fFacadeOperator As FFacade_Configurations_Operator
Set fFacadeOperator = fFacadeConfigurations.addOperator()"]]>
<children count="0">
</children>
</entry>
<entry name="getOperatorById">
<![CDATA["Dim fFacadeOperator As FFacade_Configurations_Operator
Set fFacadeOperator = fFacadeConfigurations.getOperatorById( ID )
If ( fFacadeOperator Is Nothing ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="removeOperatorById">
<![CDATA["Call fFacadeConfigurations.removeOperatorById( ID )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="getAllBracketsByBrackets">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.getAllBracketsByBrackets( FFacade_Configurations_Brackets )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAllBracketsByView">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.getAllBracketsByView( FFacade_Configurations_View )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAllColumnsByView">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.getAllColumnsByView( FFacade_Configurations_View )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAllConditionsByBrackets">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.getAllConditionsByBrackets( FFacade_Configurations_Brackets )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAllConditionsByView">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.getAllConditionsByView( FFacade_Configurations_View )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAllEmbeddedViewsByForm">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.getAllEmbeddedViewsByForm( FFacade_Configurations_Form )
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAllImages">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = fFacadeConfigurations.getAllImages()
If ( fArray.Count = 0 ) Then

Else

End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Dim fFacade as FFacade_Service"">
<![CDATA["Dim fFacade as FFacade_Service
Set fFacade = fPackagesManager.getPackageServiceByPackageName( PACKAGE_NAME_FBYTE_FACADE )"]]>
<children count="0">
</children>
</entry>
<entry name="factory">
<children count="3">
<entry name=""Dim fFacadeFactory as FFacade_Factory_Service"">
<![CDATA["Dim fFacadeFactory as FFacade_Factory_Service
Set fFacadeFactory = fFacade.factory"]]>
<children count="0">
</children>
</entry>
<entry name="createForm">
<![CDATA["Dim fFacadeForm As FFacade_Factory_Form
Set fFacadeForm = fFacadeFactory.createForm()"]]>
<children count="0">
</children>
</entry>
<entry name="form">
<children count="2">
<entry name="addTab">
<![CDATA["Dim fFacadeTab As FFacade_Factory_Tab
Set fFacadeTab = fFacadeForm.addTab()"]]>
<children count="0">
</children>
</entry>
<entry name="tab">
<children count="7">
<entry name="addField">
<![CDATA["Dim fFacadeField As FFacade_Factory_Field
Set fFacadeField = fFacadeTab.addField()
fFacadeField.title = ""TITLE""
'fFacadeField.isMultyValues = FALSE
'Set fFacadeField.source = FPLATFORM_LINK"]]>
<children count="0">
</children>
</entry>
<entry name="getFirstField">
<![CDATA[getFirstField]]>
<children count="0">
</children>
</entry>
<entry name="getNextField">
<![CDATA[getNextField]]>
<children count="0">
</children>
</entry>
<entry name="getPrevField">
<![CDATA[getPrevField]]>
<children count="0">
</children>
</entry>
<entry name="getAllFields">
<![CDATA[getAllFields]]>
<children count="0">
</children>
</entry>
<entry name="removeField">
<![CDATA[removeField]]>
<children count="0">
</children>
</entry>
<entry name="removeAllFields">
<![CDATA[removeAllFields]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="dev">
<children count="2">
<entry name="design">
<children count="2">
<entry name="update">
<![CDATA["	Call sm.get( ""fbyte.design"" ).update( DATABASE_OBJECT_TARGET, DATABASE_OBJECT_SOURCE )"]]>
<children count="0">
</children>
</entry>
<entry name=""Dim fDevDesign As FDev_Design_Service"">
<![CDATA["Dim fDevDesign As FDev_Design_Service
Set fDevDesign = fDev.design"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Dim fDev As FDev_Service"">
<![CDATA["Dim fDev As FDev_Service
Set fDev = fPackagesManager.getPackageServiceByPackageName( PACKAGE_NAME_FBYTE_DEV )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="getEntity">
<![CDATA["Dim fEntity As FPlatform_Abstract_Entity
Set fEntity = fPackagesManager.getEntity( FPlatform_Link )
"]]>
<children count="0">
</children>
</entry>
<entry name="saveEntity">
<![CDATA["Dim fLink As FPlatform_Link
Set fLink = fPackagesManager.saveEntity( FPlatform_Abstract_Entity )
If ( fLink Is Nothing ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="removeEntity">
<![CDATA["Call fPackagesManager.removeEntity
( FPlatform_Abstract_Entity )"]]>
<children count="0">
</children>
</entry>
<entry name="environment">
<children count="5">
<entry name=""Dim fEnvironment As FPlatform_Environment"">
<![CDATA["Dim fEnvironment As FPlatform_Environment
Set fEnvironment = fPackagesManager.environment"]]>
<children count="0">
</children>
</entry>
<entry name="addVariable">
<![CDATA["Dim fEnvironmentVariable as FPlatform_Environment_Variable
Set fEnvironmentVariable = fEnvironment.addVariable( NAME )"]]>
<children count="0">
</children>
</entry>
<entry name="hasVariable">
<![CDATA["If ( fEnvironment.hasVariable( NAME )) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getVariable">
<![CDATA["Dim fEnvironmentVariable as FPlatform_Environment_Variable
Set fEnvironmentVariable = fEnvironment.getVariable( NAME )"]]>
<children count="0">
</children>
</entry>
<entry name="removeVariable">
<![CDATA["Call fEnvironment.removeVariable( NAME )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="ui">
<children count="2">
<entry name=""Dim fUI as FUI_Service"">
<![CDATA["Dim fUI as FUI_Service
Set fUI = fPackagesManager.getPackageServiceByPackageName( PACKAGE_NAME_FBYTE_UI )"]]>
<children count="0">
</children>
</entry>
<entry name="protocol">
<children count="6">
<entry name=""Dim fUIProtocol as FUI_Protocol_Service"">
<![CDATA["Dim fUIProtocol as FUI_Protocol_Service
Set fUIProtocol = fUI.protocol"]]>
<children count="0">
</children>
</entry>
<entry name="createResult">
<![CDATA["Dim fUIResult As FUI_Protocol_Result
Set fUIResult = fUIProtocol.createResult()
'Call fUIResult.setActionNone()
'Call fUIResult.setActionOpenEntity( FPlatform_Abstract_Entity )
'Call fUIResult.setActionMessageBox( FUI_Protocol_MessageBox )
"]]>
<children count="0">
</children>
</entry>
<entry name="createRequest">
<![CDATA["Dim fUIRequest As FUI_Protocol_Request
Set fUIRequest = fUIProtocol.createRequest()"]]>
<children count="0">
</children>
</entry>
<entry name="createMessageBox">
<![CDATA["Dim fUIMessageBox As FUI_Protocol_MessageBox
Set fUIMessageBox = fUIProtocol.createMessageBox()"]]>
<children count="0">
</children>
</entry>
<entry name="processResult">
<![CDATA["Call fUIProtocol.processResult( FUI_Protocol_Result )"]]>
<children count="0">
</children>
</entry>
<entry name="processCollectionOfResults">
<![CDATA["Call fUIProtocol.processCollectionOfResults( FMisc_Collections_Array )"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="getDocEntity">
<![CDATA["Dim fEntity As FPlatform_Abstract_Entity
Set fEntity = fPackagesManager.getDocEntity( NotesDocument )
"]]>
<children count="0">
</children>
</entry>
<entry name="hasEntity">
<![CDATA["Dim hasEntity as Boolean
hasEntity = fPackagesManager.getEntity( FPlatform_Link )
If ( hasEntity ) Then
	
Else
	
End If
"]]>
<children count="0">
</children>
</entry>
<entry name="rpc">
<children count="1">
<entry name="createRequest">
<![CDATA["Dim fRequest As FCore_RPC_Request
Set fRequest = fClient.createRequest( TITLE, HANDLER_ID ) "]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="tps">
<children count="3">
<entry name="gw">
<children count="1">
<entry name=""Dim fGateway as TGateway_Service"">
<![CDATA["Dim fGateway as TGateway_Service
Set fGateway = tps.gateway"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="services">
<children count="3">
<entry name="mailings">
<children count="1">
<entry name=""Dim tMailingService As TServices_Mailings_Service"">
<![CDATA["Dim tMailingService As TServices_Mailings_Service
Set tMailingService = tServices.mailings"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Dim tServices As TServices_Service"">
<![CDATA["Dim tServices As TServices_Service
Set tServices = fPackagesManager.getPackageServiceByPackageName( PACKAGE_NAME_TPS_SERVICES )
"]]>
<children count="0">
</children>
</entry>
<entry name="installator">
<children count="7">
<entry name=""Dim tInstaller As TServices_Installer_Service"">
<![CDATA["Dim tInstallator As TServices_Installator_Service
Set tInstallator = tServices.installator"]]>
<children count="0">
</children>
</entry>
<entry name="addApplication">
<![CDATA["Dim tApplication as TServices_Installator_Application
Set tApplication = tInstallator.addApplication()"]]>
<children count="0">
</children>
</entry>
<entry name="hasApplicationById">
<![CDATA["Dim hasApplication as Boolean
hasApplication = tInstallator.hasApplicationById( ID )
If ( hasApplication ) Then

Else

End if"]]>
<children count="0">
</children>
</entry>
<entry name="getApplicationById">
<![CDATA["Dim tApplication as TServices_Installator_Application
Set tApplication = tInstallator.getApplicationById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeApplicationById">
<![CDATA["Call tInstallator.removeApplicationById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectApplications">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = tInstallator.dialogSelectApplications( IS_MULTY )
If ( fArray.Count > 0 ) Then
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="getAllFilesByApplication">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = tInstallator.getAllFilesByApplication( TServices_Installator_Application )
If ( fArray.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="projects">
<children count="2">
<entry name=""Dim tProjects as TProjects_Service"">
<![CDATA["Dim tProjects as TProjects_Service
Set tProjects = fPackagesManager.getPackageServiceByPackageName( PACKAGE_NAME_TPS_PROJECTS )"]]>
<children count="0">
</children>
</entry>
<entry name="projects">
<children count="56">
<entry name=""Dim tProjectsProjects as TProjects_Projects_Service"">
<![CDATA["Dim tProjectsProjects as TProjects_Projects_Service
Set tProjectsProjects = tProjects.projects "]]>
<children count="0">
</children>
</entry>
<entry name="addBuildingPermit">
<![CDATA["Dim tBuildingPermit As TProjects_Projects_BuildingPermit
Set tBuildingPermit = tProjectsProjects.addBuildingPermit()"]]>
<children count="0">
</children>
</entry>
<entry name="addProject">
<![CDATA["Dim tProject As TProjects_Projects_Project
Set tProject = tProjectsProjects.addProject()"]]>
<children count="0">
</children>
</entry>
<entry name="getProjectById">
<![CDATA["Dim tProject As TProjects_Projects_Project
Set tProject = tProjectsProjects.getProjectById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeProjectById">
<![CDATA["Call tProjectsProjects.removeProjectById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="getBuildingPermitById">
<![CDATA["Dim tBuildingPermit As TProjects_Projects_BuildingPermit
Set tBuildingPermit = tProjectsProjects.getBuildingPermitById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeBuildingPermitById">
<![CDATA["Call tProjectsProjects.removeBuildingPermitById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addCommissioningPermit">
<![CDATA["Dim tCommissioningPermit As TProjects_Projects_CommissioningPermit
Set tCommissioningPermit = tProjectsProjects.addCommissioningPermit()"]]>
<children count="0">
</children>
</entry>
<entry name="getCommissioningPermitById">
<![CDATA["Dim tCommissioningPermit As TProjects_Projects_CommissioningPermit
Set tCommissioningPermit = tProjectsProjects.getCommissioningPermitById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeCommissioningPermitById">
<![CDATA["Call tProjectsProjects.removeCommissioningPermitById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addConclusionCompliance">
<![CDATA["Dim tConclusionCompliance As TProjects_Projects_ConclusionCompliance
Set tConclusionCompliance = tProjectsProjects.addConclusionCompliance()"]]>
<children count="0">
</children>
</entry>
<entry name="getConclusionComplianceById">
<![CDATA["Dim tConclusionCompliance As TProjects_Projects_ConclusionCompliance
Set tConclusionCompliance = tProjectsProjects.getConclusionComplianceById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeConclusionComplianceById">
<![CDATA["Call tProjectsProjects.removeConclusionComplianceById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addDesignConcept">
<![CDATA["Dim tDesignConcept As TProjects_Projects_DesignConcept
Set tDesignConcept = tProjectsProjects.addDesignConcept()"]]>
<children count="0">
</children>
</entry>
<entry name="getDesignConceptById">
<![CDATA["Dim tDesignConcept As TProjects_Projects_DesignConcept
Set tDesignConcept = tProjectsProjects.getDesignConceptById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeDesignConceptById">
<![CDATA["Call tProjectsProjects.removeDesignConceptById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addDesignDetail">
<![CDATA["Dim tDesignDetail As TProjects_Projects_DesignDetail
Set tDesignDetail = tProjectsProjects.addDesignDetail()"]]>
<children count="0">
</children>
</entry>
<entry name="getDesignDetailById">
<![CDATA["Dim tDesignDetail As TProjects_Projects_DesignDetail
Set tDesignDetail = tProjectsProjects.getDesignDetailById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeDesignDetailById">
<![CDATA["Call tProjectsProjects.removeDesignDetailById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addDesignSchematic">
<![CDATA["Dim tDesignSchematic As TProjects_Projects_DesignSchematic
Set tDesignSchematic = tProjectsProjects.addDesignSchematic()"]]>
<children count="0">
</children>
</entry>
<entry name="getDesignSchematicById">
<![CDATA["Dim tDesignSchematic As TProjects_Projects_DesignSchematic
Set tDesignSchematic = tProjectsProjects.getDesignSchematicById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeDesignSchematicById">
<![CDATA["Call tProjectsProjects.removeDesignSchematicById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addEstimate">
<![CDATA["Dim tEstimate As TProjects_Projects_Estimate
Set tEstimate = tProjectsProjects.addEstimate()"]]>
<children count="0">
</children>
</entry>
<entry name="getEstimateById">
<![CDATA["Dim tEstimate As TProjects_Projects_Estimate
Set tEstimate = tProjectsProjects.getEstimateById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeEstimateById">
<![CDATA["Call tProjectsProjects.removeEstimateById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addExpertise">
<![CDATA["Dim tExpertise As TProjects_Projects_Expertise
Set tExpertise = tProjectsProjects.addExpertise()"]]>
<children count="0">
</children>
</entry>
<entry name="getExpertiseById">
<![CDATA["Dim tExpertise As TProjects_Projects_Expertise
Set tExpertise = tProjectsProjects.getExpertiseById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeExpertiseById">
<![CDATA["Call tProjectsProjects.removeExpertiseById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addInvestmentBudget">
<![CDATA["Dim tInvestmentBudget As TProjects_Projects_InvestmentBudget
Set tInvestmentBudget = tProjectsProjects.addInvestmentBudget()"]]>
<children count="0">
</children>
</entry>
<entry name="getInvestmentBudgetById">
<![CDATA["Dim tInvestmentBudget As TProjects_Projects_InvestmentBudget
Set tInvestmentBudget = tProjectsProjects.getInvestmentBudgetById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeInvestmentBudgetById">
<![CDATA["Call tProjectsProjects.removeInvestmentBudgetById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addMarketing">
<![CDATA["Dim tMarketing As TProjects_Projects_Marketing
Set tMarketing = tProjectsProjects.addMarketing()"]]>
<children count="0">
</children>
</entry>
<entry name="getMarketingById">
<![CDATA["Dim tMarketing As TProjects_Projects_Marketing
Set tMarketing = tProjectsProjects.getMarketingById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeMarketingById">
<![CDATA["Call tProjectsProjects.removeMarketingById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addModel">
<![CDATA["Dim tModel As TProjects_Projects_Model
Set tModel = tProjectsProjects.addModel()"]]>
<children count="0">
</children>
</entry>
<entry name="getModelById">
<![CDATA["Dim tModel As TProjects_Projects_Model
Set tModel = tProjectsProjects.getModelById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeModelById">
<![CDATA["Call tProjectsProjects.removeModelById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addSchedulePlan">
<![CDATA["Dim tSchedulePlan As TProjects_Projects_SchedulePlan
Set tSchedulePlan = tProjectsProjects.addSchedulePlan()"]]>
<children count="0">
</children>
</entry>
<entry name="getSchedulePlanById">
<![CDATA["Dim tSchedulePlan As TProjects_Projects_SchedulePlan
Set tSchedulePlan = tProjectsProjects.getSchedulePlanById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeSchedulePlanById">
<![CDATA["Call tProjectsProjects.removeSchedulePlanById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addTechnicalTask">
<![CDATA["Dim tTechnicalTask As TProjects_Projects_TechnicalTask
Set tTechnicalTask = tProjectsProjects.addTechnicalTask()"]]>
<children count="0">
</children>
</entry>
<entry name="getTechnicalTaskById">
<![CDATA["Dim tTechnicalTask As TProjects_Projects_TechnicalTask
Set tTechnicalTask = tProjectsProjects.getTechnicalTaskById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeTechnicalTaskById">
<![CDATA["Call tProjectsProjects.removeTechnicalTaskById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addTender">
<![CDATA["Dim tTender As TProjects_Projects_Tender
Set tTender = tProjectsProjects.addTender()"]]>
<children count="0">
</children>
</entry>
<entry name="getTenderById">
<![CDATA["Dim tTender As TProjects_Projects_Tender
Set tTender = tProjectsProjects.getTenderById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeTenderById">
<![CDATA["Call tProjectsProjects.removeTenderById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="dialogSelectProjects">
<![CDATA["Dim fArray as FMisc_Collections_Array
Set fArray = tProjectsProjects.dialogSelectProjects( IS_MULTY )
If ( fArray.Count > 0 ) Then
	
End If"]]>
<children count="0">
</children>
</entry>
<entry name="addLandOwnership">
<![CDATA["Dim tLandOwnership As TProjects_Projects_LandOwnership
Set tLandOwnership = tProjectsProjects.addLandOwnership()"]]>
<children count="0">
</children>
</entry>
<entry name="hasLandOwnershipById">
<![CDATA["If ( tProjectsProjects.hasLandOwnershipById( ID )) Then

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getLandOwnershipById">
<![CDATA["Dim tLandOwnership As TProjects_Projects_LandOwnership
Set tLandOwnership = tProjectsProjects.getLandOwnershipById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="removeLandOwnershipById">
<![CDATA["Call tProjectsProjects.removeLandOwnershipById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="addBuildingOwnership">
<![CDATA["Dim tBuildingOwnership As TProjects_Projects_BuildingOwnership
Set tBuildingOwnership = tProjectsProjects.addBuildingOwnership()"]]>
<children count="0">
</children>
</entry>
<entry name="hasBuildingOwnershipById">
<![CDATA["If ( tProjectsProjects.hasBuildingOwnershipById( ID )) Then

End If"]]>
<children count="0">
</children>
</entry>
<entry name="getBuildingOwnershipById">
<![CDATA["Dim tBuildingOwnership As TProjects_Projects_BuildingOwnership
Set tBuildingOwnership = tProjectsProjects.getBuildingOwnershipById( ID )
"]]>
<children count="0">
</children>
</entry>
<entry name="removeBuildingOwnershipById">
<![CDATA["Call tProjectsProjects.removeBuildingOwnershipById( ID )"]]>
<children count="0">
</children>
</entry>
<entry name="getAllShedulePlansByProject">
<![CDATA["Dim fArray As FMisc_Collections_Array
Set fArray = tProjectsProjects.getAllShedulePlansByProject( TPROJECTS_PROJECTS_PROJECT )
If ( fArray.Count = 0 ) Then
	
Else
	
End If"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name=""Команды консоли Domino"">
<children count="7">
<entry name="TPS">
<children count="4">
<entry name=""Запуск агента обновления ОД"">
<![CDATA["tell amgr run ""DocFlow\dbOrg_v1.nsf"" '01. Synch'"]]>
<children count="0">
</children>
</entry>
<entry name=""Запуск агента each5minutes"">
<![CDATA["tell amgr run ""DocFlow\PCenter_v1.nsf"" 'each5minutes'"]]>
<children count="0">
</children>
</entry>
<entry name=""load dircat edc.nsf -r"">
<![CDATA["load dircat edc.nsf -r"]]>
<children count="0">
</children>
</entry>
<entry name="workflow">
<children count="1">
<entry name="conferences">
<children count="1">
<entry name="ReminderExpire">
<![CDATA["tell amgr run ""OUTSIDE\MASH\common\workflow\conferences.nsf"" 'ReminderExpire'"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
</children>
</entry>
<entry name="Traveler">
<children count="1">
<entry name=""Показать всех пользователей"">
<![CDATA["tell traveler users"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Изменить параметр Notes.INI"">
<![CDATA["set configuration PARAMETR_NAME=VALUE"]]>
<children count="0">
</children>
</entry>
<entry name=""Tell adminp -p -a"">
<![CDATA["Tell adminp -p -a"]]>
<children count="0">
</children>
</entry>
<entry name=""load compact -c -i -..."">
<![CDATA["load compact -c -i -D"]]>
<children count="0">
</children>
</entry>
<entry name=""load design -d <DIR>"">
<![CDATA["load design -d <DIRECTORY>"]]>
<children count="0">
</children>
</entry>
<entry name=""compact -ods -* -upgrade"">
<![CDATA["compact -ods -* -upgrade"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name="JIRA">
<children count="3">
<entry name=""История"">
<children count="3">
<entry name=""Запрос на создание функциональности"">
<![CDATA["1. Я, как <Роль в процессе>, хочу, чтобы в ПМ <Название ПМ> [В (РК|Представлении)] была добавлена возможность <Название функциональности>, с помощью которой я смогу <Описание функциональности>
2. <Описание целесообразности / описание проблемы, которая будет решена с помощью запрашиваемой функциональности>"]]>
<children count="0">
</children>
</entry>
<entry name=""Запрос на изменение функциональности"">
<![CDATA["1. Я, как <Роль в процессе>, хочу, чтобы в ПМ <Название ПМ> была изменена возможность <Название функциональности>:
<Описание функциональности с выделением изменений>
<Описание целесообразности / описание проблемы, которая будет решена с помощью запрашиваемой функциональности>
2. Ссылка на Историю добавления или изменения запавшиваемой функциональности
3. Запрос на удаление функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Запрос на удаление функциональности"">
<![CDATA["1. Я, как <Роль в процессе>, хочу, чтобы в ПМ <Название ПМ> была удалена возможность <Название функциональности>
2. <Описание целесообразности / описание проблемы, которая будет решена с помощью запрашиваемой функциональности>
3. Ссылка на Историю добавления или изменения запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Ошикба"">
<children count="3">
<entry name=""Запрос на исправление ошибки в РК"">
<![CDATA["1. В ПМ <Название ПМ> в РК <Название РК> наблюдается ошибочное поведение Системы:
	+ Пользователь открыл РК <Название РК> в режиме (Чтения|Редактирования)
	+ Пользователь нажал на <Полный/путь/к/элменту/дизайна/Название элемента>
	+ Система выполнила операцию ...
2. Ссылка на Историю добавления или изменение функциональности, в которой наблюдается ошибка
3. [Файл лога]"]]>
<children count="0">
</children>
</entry>
<entry name=""Запрос на исправление ошибки в Представлении"">
<![CDATA["1. В ПМ <Название ПМ> в представлении <Название представления> наблюдается ошибочное поведение Системы:
	+ Ошибка в действии:
		- Пользователь открыл представление <Название представления>
		- Пользователь нажал на <Полный/путь/к/действию/Название действия>
		- Система выполнила операцию ...
	+ Ошибка в отображении:
		- Система неправильно отобрала документы
		- Столбцы неправильно расположены
		- Столбцы отображают не правильную инфрмацию
		- Столбцы неправильно группируют информацию
		- Столбцы форматируют значения неправильным цветом, шрифтом
2. Ссылка на Историю добавления или изменение функциональности, в которой наблюдается ошибка
3. [Файл лога]"]]>
<children count="0">
</children>
</entry>
<entry name=""Запрос на исправление ошибки в Отчете"">
<![CDATA["1. В ПМ <Название ПМ> в отчете <Название отчета> наблюдается ошибочное поведение Системы:
	+ Пользователь открыл РК <Название РК> в режиме (Чтения|Редактирования)
	+ Пользователь нажал на <Полный/путь/к/элменту/дизайна/Название элемента>
	+ Система выполнила операцию ...
2. Ссылка на Историю добавления или изменение функциональности, в которой наблюдается ошибка
3. [Файл лога]"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Подзадача"">
<children count="3">
<entry name=""Область навигации"">
<children count="3">
<entry name=""Добавить ссылку"">
<![CDATA["# В области навигации добавить ссылку <Полный/путь/к/ссылке> на <[Название ПМ/]Название представления>
#  Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Изменить ссылку"">
<![CDATA["# В области навигации изменить ссылку <Полный/путь/к/ссылке> на <[Название ПМ/]Название представления>
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Удалить ссылку"">
<![CDATA["# В области навигации удалить ссылку <Полный/путь/к/ссылке>
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Представление"">
<children count="3">
<entry name=""Панель действий"">
<children count="3">
<entry name=""Добавить действие"">
<![CDATA["# В представлении <Название представления> в панели действий *добавить* действие «Полный/Путь/Название действия»
# Ожидаемое поведение Системы при нажатии Пользователя на действие
# Требования к внешнему виду:
** Иконка
** Ширина
** Выравнивание
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Изменить действие"">
<![CDATA["# В представлении <Название представления> в панели действий *изменить* действие «Полный/Путь/Название действия»
# Описание ожидаемого поведения Системы при нажатии Пользователя на действие, в котором выделены изменения
# Требования к внешнему виду:
** Иконка
** Ширина
** Выравнивание
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Удалить действие"">
<![CDATA["# В представлении <Название представления> в панели действий удалить действие «Полный/Путь/Название действия»
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Параметры отбора документов"">
<![CDATA["# В представлении <Название представления> реализовать отбор документов по условию:
** Тип документа = <Тип_документа>
** Тип_документа.<Название атрибута> = <Значение>
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Параметры отображения столбца"">
<![CDATA["# В представлении <Название представления> (добавить|изменить|удалить) столбец <Название столбца>:
** Позиция: <Указать номер>
** Значение: Тип_документа.<Название атрибута>
** Форматирование:
*** Ширина
*** Размер шрифта
*** Цвет
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Регистрационная карточка"">
<children count="2">
<entry name=""Панель действий"">
<children count="3">
<entry name=""Добавить действие"">
<![CDATA["# В РК <Название РК>  в панели действий *добавить* действие «Полный/Путь/Название действия»
# Ожидаемое поведение Системы при нажатии Пользователя на действие
# Требования к внешнему виду:
** Иконка
** Ширина
** Выравнивание
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Изменить действие"">
<![CDATA["# В РК <Название РК> в панели действий *изменить* действие «Полный/Путь/Название действия»
# Описание ожидаемого поведения Системы при нажатии Пользователя на действие, в котором *выделены изменения*
# Требования к внешнему виду:
** Иконка
** Ширина
** Выравнивание
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Удалить действие"">
<![CDATA["# В РК <Название РК>  в панели действий *удалить* действие «Полный/Путь/Название действия»
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
<entry name=""Атрибуты"">
<children count="9">
<entry name=""Добавить текстовый атрибут"">
<![CDATA["# В РК <Название РК> *добавить* атрибут <Полный/путь/к/вкладке/Название атрибута> типа ""Текст""
# Может содержать несколько значений: (Да|Нет)
# Значение атрибута: (Редактируемое|Не редактируемое)
# [Значение по умолчанию: <Значение>]
# [Ограничения на вводимые данные:] 
** Без ограничений 
** Одно значение из списка:
*** Значение 1
*** Значение 2
*** ... 
** Несколько значений из списка:
*** Значение 1
*** Значение 2
*** ... 
# [Связь со словарем в ПМ ""Словари"": <Название словаря>]
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Изменить текстовый атрибут"">
<![CDATA["# В РК <Название РК> *изменить* атрибут <Полный/путь/к/вкладке/Название атрибута> типа ""Текст""
# Может содержать несколько значений: (Да|Нет)
# Значение атрибута: (Редактируемое|Не редактируемое)
# [Значение по умолчанию: <Значение>]
# [Ограничения на вводимые данные:] 
** Без ограничений 
** Одно значение из списка:
*** Значение 1
*** Значение 2
*** ... 
** Несколько значений из списка:
*** Значение 1
*** Значение 2
*** ... 
# [Связь со словарем в ПМ ""Словари"": <Название словаря>]
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Добавить числовой атрибут"">
<![CDATA["# В РК <Название РК> *добавить* атрибут <Полный/путь/к/вкладке/Название атрибута> типа ""Число""
# Может содержать несколько значений: (Да|Нет)
# Значение атрибута: (Редактируемое|Не редактируемое)
# [Значение по умолчанию: <Числовое значение>]
# [Ограничения на вводимые данные:] 
* Минимальное / Максимальное значение
* Одно значение из списка:
** Значение 1
** Значение 2
** ... 
* Несколько значений из списка: 
** Значение 1
** Значение 2
** ...
Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Изменить числовой атрибут"">
<![CDATA["# В РК <Название РК> *изменить* атрибут <Полный/путь/к/вкладке/Название атрибута> типа ""Число""
# Может содержать несколько значений: (Да|Нет)
# Значение атрибута: (Редактируемое|Не редактируемое)
# [Значение по умолчанию: <Числовое значение>]
# [Ограничения на вводимые данные:] 
* Минимальное / Максимальное значение
* Одно значение из списка:
** Значение 1
** Значение 2
** ... 
* Несколько значений из списка: 
** Значение 1
** Значение 2
** ...
Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Добавить временной атрибут"">
<![CDATA["# В РК <Название РК> *добавить* атрибут <Полный/путь/к/вкладке/Название атрибута> типа ""Дата и время""
# Значение атрибута: (Редактируемое|Не редактируемое)
# [Значение по умолчанию: <Значение Дата_Время>]
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Изменить временной атрибут"">
<![CDATA["# В РК <Название РК> *изменить* атрибут <Полный/путь/к/вкладке/Название атрибута> типа ""Дата и время""
# Значение атрибута: (Редактируемое|Не редактируемое)
# [Значение по умолчанию: <Значение Дата_Время>]
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Добавить ссылочный атрибут"">
<![CDATA["# В РК <Название РК> *добавить* атрибут <Полный/путь/к/вкладке/Название атрибута> типа ""Ссылка""
# Значение атрибута: (Редактируемое|Не редактируемое)
# [Связь со справочником ""[Название ПМ/]Название представления""]
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Изменить ссылочный атрибут"">
<![CDATA["# В РК <Название РК> *изменить* атрибут <Полный/путь/к/вкладке/Название атрибута> типа ""Ссылка""
# Значение атрибута: (Редактируемое|Не редактируемое)
# [Связь со справочником ""[Название ПМ/]Название представления""]
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
<entry name=""Удалить атрибут"">
<![CDATA["# В РК <Название РК>  удалить атрибту <Полный/Путь/Название атрибута>
# Ссылка на Историю запрашиваемой функциональности"]]>
<children count="0">
</children>
</entry>
</children>
</entry>
</children>
</entry>
</children>
</entry>
</children>
</entry>
